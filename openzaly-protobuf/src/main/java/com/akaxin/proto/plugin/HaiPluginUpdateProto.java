// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin/hai_plugin_update.proto

package com.akaxin.proto.plugin;

public final class HaiPluginUpdateProto {
  private HaiPluginUpdateProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HaiPluginUpdateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.HaiPluginUpdateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *需要更新的插件扩展
     * </pre>
     *
     * <code>optional .core.PluginProfile plugin = 1;</code>
     */
    boolean hasPlugin();
    /**
     * <pre>
     *需要更新的插件扩展
     * </pre>
     *
     * <code>optional .core.PluginProfile plugin = 1;</code>
     */
    com.akaxin.proto.core.PluginProto.PluginProfile getPlugin();
    /**
     * <pre>
     *需要更新的插件扩展
     * </pre>
     *
     * <code>optional .core.PluginProfile plugin = 1;</code>
     */
    com.akaxin.proto.core.PluginProto.PluginProfileOrBuilder getPluginOrBuilder();
  }
  /**
   * Protobuf type {@code site.HaiPluginUpdateRequest}
   */
  public  static final class HaiPluginUpdateRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:site.HaiPluginUpdateRequest)
      HaiPluginUpdateRequestOrBuilder {
    // Use HaiPluginUpdateRequest.newBuilder() to construct.
    private HaiPluginUpdateRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HaiPluginUpdateRequest() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HaiPluginUpdateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.akaxin.proto.core.PluginProto.PluginProfile.Builder subBuilder = null;
              if (plugin_ != null) {
                subBuilder = plugin_.toBuilder();
              }
              plugin_ = input.readMessage(com.akaxin.proto.core.PluginProto.PluginProfile.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(plugin_);
                plugin_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.akaxin.proto.plugin.HaiPluginUpdateProto.internal_static_site_HaiPluginUpdateRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.akaxin.proto.plugin.HaiPluginUpdateProto.internal_static_site_HaiPluginUpdateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest.class, com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest.Builder.class);
    }

    public static final int PLUGIN_FIELD_NUMBER = 1;
    private com.akaxin.proto.core.PluginProto.PluginProfile plugin_;
    /**
     * <pre>
     *需要更新的插件扩展
     * </pre>
     *
     * <code>optional .core.PluginProfile plugin = 1;</code>
     */
    public boolean hasPlugin() {
      return plugin_ != null;
    }
    /**
     * <pre>
     *需要更新的插件扩展
     * </pre>
     *
     * <code>optional .core.PluginProfile plugin = 1;</code>
     */
    public com.akaxin.proto.core.PluginProto.PluginProfile getPlugin() {
      return plugin_ == null ? com.akaxin.proto.core.PluginProto.PluginProfile.getDefaultInstance() : plugin_;
    }
    /**
     * <pre>
     *需要更新的插件扩展
     * </pre>
     *
     * <code>optional .core.PluginProfile plugin = 1;</code>
     */
    public com.akaxin.proto.core.PluginProto.PluginProfileOrBuilder getPluginOrBuilder() {
      return getPlugin();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (plugin_ != null) {
        output.writeMessage(1, getPlugin());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (plugin_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPlugin());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest)) {
        return super.equals(obj);
      }
      com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest other = (com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest) obj;

      boolean result = true;
      result = result && (hasPlugin() == other.hasPlugin());
      if (hasPlugin()) {
        result = result && getPlugin()
            .equals(other.getPlugin());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasPlugin()) {
        hash = (37 * hash) + PLUGIN_FIELD_NUMBER;
        hash = (53 * hash) + getPlugin().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code site.HaiPluginUpdateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:site.HaiPluginUpdateRequest)
        com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.akaxin.proto.plugin.HaiPluginUpdateProto.internal_static_site_HaiPluginUpdateRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.akaxin.proto.plugin.HaiPluginUpdateProto.internal_static_site_HaiPluginUpdateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest.class, com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest.Builder.class);
      }

      // Construct using com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (pluginBuilder_ == null) {
          plugin_ = null;
        } else {
          plugin_ = null;
          pluginBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.akaxin.proto.plugin.HaiPluginUpdateProto.internal_static_site_HaiPluginUpdateRequest_descriptor;
      }

      public com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest getDefaultInstanceForType() {
        return com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest.getDefaultInstance();
      }

      public com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest build() {
        com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest buildPartial() {
        com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest result = new com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest(this);
        if (pluginBuilder_ == null) {
          result.plugin_ = plugin_;
        } else {
          result.plugin_ = pluginBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest) {
          return mergeFrom((com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest other) {
        if (other == com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest.getDefaultInstance()) return this;
        if (other.hasPlugin()) {
          mergePlugin(other.getPlugin());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.akaxin.proto.core.PluginProto.PluginProfile plugin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.PluginProto.PluginProfile, com.akaxin.proto.core.PluginProto.PluginProfile.Builder, com.akaxin.proto.core.PluginProto.PluginProfileOrBuilder> pluginBuilder_;
      /**
       * <pre>
       *需要更新的插件扩展
       * </pre>
       *
       * <code>optional .core.PluginProfile plugin = 1;</code>
       */
      public boolean hasPlugin() {
        return pluginBuilder_ != null || plugin_ != null;
      }
      /**
       * <pre>
       *需要更新的插件扩展
       * </pre>
       *
       * <code>optional .core.PluginProfile plugin = 1;</code>
       */
      public com.akaxin.proto.core.PluginProto.PluginProfile getPlugin() {
        if (pluginBuilder_ == null) {
          return plugin_ == null ? com.akaxin.proto.core.PluginProto.PluginProfile.getDefaultInstance() : plugin_;
        } else {
          return pluginBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *需要更新的插件扩展
       * </pre>
       *
       * <code>optional .core.PluginProfile plugin = 1;</code>
       */
      public Builder setPlugin(com.akaxin.proto.core.PluginProto.PluginProfile value) {
        if (pluginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          plugin_ = value;
          onChanged();
        } else {
          pluginBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *需要更新的插件扩展
       * </pre>
       *
       * <code>optional .core.PluginProfile plugin = 1;</code>
       */
      public Builder setPlugin(
          com.akaxin.proto.core.PluginProto.PluginProfile.Builder builderForValue) {
        if (pluginBuilder_ == null) {
          plugin_ = builderForValue.build();
          onChanged();
        } else {
          pluginBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *需要更新的插件扩展
       * </pre>
       *
       * <code>optional .core.PluginProfile plugin = 1;</code>
       */
      public Builder mergePlugin(com.akaxin.proto.core.PluginProto.PluginProfile value) {
        if (pluginBuilder_ == null) {
          if (plugin_ != null) {
            plugin_ =
              com.akaxin.proto.core.PluginProto.PluginProfile.newBuilder(plugin_).mergeFrom(value).buildPartial();
          } else {
            plugin_ = value;
          }
          onChanged();
        } else {
          pluginBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *需要更新的插件扩展
       * </pre>
       *
       * <code>optional .core.PluginProfile plugin = 1;</code>
       */
      public Builder clearPlugin() {
        if (pluginBuilder_ == null) {
          plugin_ = null;
          onChanged();
        } else {
          plugin_ = null;
          pluginBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *需要更新的插件扩展
       * </pre>
       *
       * <code>optional .core.PluginProfile plugin = 1;</code>
       */
      public com.akaxin.proto.core.PluginProto.PluginProfile.Builder getPluginBuilder() {
        
        onChanged();
        return getPluginFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *需要更新的插件扩展
       * </pre>
       *
       * <code>optional .core.PluginProfile plugin = 1;</code>
       */
      public com.akaxin.proto.core.PluginProto.PluginProfileOrBuilder getPluginOrBuilder() {
        if (pluginBuilder_ != null) {
          return pluginBuilder_.getMessageOrBuilder();
        } else {
          return plugin_ == null ?
              com.akaxin.proto.core.PluginProto.PluginProfile.getDefaultInstance() : plugin_;
        }
      }
      /**
       * <pre>
       *需要更新的插件扩展
       * </pre>
       *
       * <code>optional .core.PluginProfile plugin = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.PluginProto.PluginProfile, com.akaxin.proto.core.PluginProto.PluginProfile.Builder, com.akaxin.proto.core.PluginProto.PluginProfileOrBuilder> 
          getPluginFieldBuilder() {
        if (pluginBuilder_ == null) {
          pluginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.PluginProto.PluginProfile, com.akaxin.proto.core.PluginProto.PluginProfile.Builder, com.akaxin.proto.core.PluginProto.PluginProfileOrBuilder>(
                  getPlugin(),
                  getParentForChildren(),
                  isClean());
          plugin_ = null;
        }
        return pluginBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:site.HaiPluginUpdateRequest)
    }

    // @@protoc_insertion_point(class_scope:site.HaiPluginUpdateRequest)
    private static final com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest();
    }

    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HaiPluginUpdateRequest>
        PARSER = new com.google.protobuf.AbstractParser<HaiPluginUpdateRequest>() {
      public HaiPluginUpdateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HaiPluginUpdateRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HaiPluginUpdateRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HaiPluginUpdateRequest> getParserForType() {
      return PARSER;
    }

    public com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HaiPluginUpdateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.HaiPluginUpdateResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code site.HaiPluginUpdateResponse}
   */
  public  static final class HaiPluginUpdateResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:site.HaiPluginUpdateResponse)
      HaiPluginUpdateResponseOrBuilder {
    // Use HaiPluginUpdateResponse.newBuilder() to construct.
    private HaiPluginUpdateResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HaiPluginUpdateResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HaiPluginUpdateResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.akaxin.proto.plugin.HaiPluginUpdateProto.internal_static_site_HaiPluginUpdateResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.akaxin.proto.plugin.HaiPluginUpdateProto.internal_static_site_HaiPluginUpdateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse.class, com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse)) {
        return super.equals(obj);
      }
      com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse other = (com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code site.HaiPluginUpdateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:site.HaiPluginUpdateResponse)
        com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.akaxin.proto.plugin.HaiPluginUpdateProto.internal_static_site_HaiPluginUpdateResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.akaxin.proto.plugin.HaiPluginUpdateProto.internal_static_site_HaiPluginUpdateResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse.class, com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse.Builder.class);
      }

      // Construct using com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.akaxin.proto.plugin.HaiPluginUpdateProto.internal_static_site_HaiPluginUpdateResponse_descriptor;
      }

      public com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse getDefaultInstanceForType() {
        return com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse.getDefaultInstance();
      }

      public com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse build() {
        com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse buildPartial() {
        com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse result = new com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse) {
          return mergeFrom((com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse other) {
        if (other == com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:site.HaiPluginUpdateResponse)
    }

    // @@protoc_insertion_point(class_scope:site.HaiPluginUpdateResponse)
    private static final com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse();
    }

    public static com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HaiPluginUpdateResponse>
        PARSER = new com.google.protobuf.AbstractParser<HaiPluginUpdateResponse>() {
      public HaiPluginUpdateResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HaiPluginUpdateResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HaiPluginUpdateResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HaiPluginUpdateResponse> getParserForType() {
      return PARSER;
    }

    public com.akaxin.proto.plugin.HaiPluginUpdateProto.HaiPluginUpdateResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_site_HaiPluginUpdateRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_site_HaiPluginUpdateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_site_HaiPluginUpdateResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_site_HaiPluginUpdateResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036plugin/hai_plugin_update.proto\022\004site\032\021" +
      "core/plugin.proto\"=\n\026HaiPluginUpdateRequ" +
      "est\022#\n\006plugin\030\001 \001(\0132\023.core.PluginProfile" +
      "\"\031\n\027HaiPluginUpdateResponse2_\n\026HaiPlugin" +
      "UpdateService\022E\n\006update\022\034.site.HaiPlugin" +
      "UpdateRequest\032\035.site.HaiPluginUpdateResp" +
      "onseB/\n\027com.akaxin.proto.pluginB\024HaiPlug" +
      "inUpdateProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.akaxin.proto.core.PluginProto.getDescriptor(),
        }, assigner);
    internal_static_site_HaiPluginUpdateRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_site_HaiPluginUpdateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_site_HaiPluginUpdateRequest_descriptor,
        new java.lang.String[] { "Plugin", });
    internal_static_site_HaiPluginUpdateResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_site_HaiPluginUpdateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_site_HaiPluginUpdateResponse_descriptor,
        new java.lang.String[] { });
    com.akaxin.proto.core.PluginProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
