// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: site/im_cts_message.proto

package com.akaxin.proto.site;

public final class ImCtsMessageProto {
  private ImCtsMessageProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ImCtsMessageRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:site.ImCtsMessageRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>optional .core.MsgType type = 1;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>optional .core.MsgType type = 1;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgType getType();

    /**
     * <pre>
     *二人文本消息
     * </pre>
     *
     * <code>optional .core.MsgText text = 2;</code>
     */
    boolean hasText();
    /**
     * <pre>
     *二人文本消息
     * </pre>
     *
     * <code>optional .core.MsgText text = 2;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgText getText();
    /**
     * <pre>
     *二人文本消息
     * </pre>
     *
     * <code>optional .core.MsgText text = 2;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgTextOrBuilder getTextOrBuilder();

    /**
     * <pre>
     *二人加密文本消息
     * </pre>
     *
     * <code>optional .core.MsgSecretText secretText = 3;</code>
     */
    boolean hasSecretText();
    /**
     * <pre>
     *二人加密文本消息
     * </pre>
     *
     * <code>optional .core.MsgSecretText secretText = 3;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgSecretText getSecretText();
    /**
     * <pre>
     *二人加密文本消息
     * </pre>
     *
     * <code>optional .core.MsgSecretText secretText = 3;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgSecretTextOrBuilder getSecretTextOrBuilder();

    /**
     * <pre>
     *群文本消息
     * </pre>
     *
     * <code>optional .core.GroupText groupText = 4;</code>
     */
    boolean hasGroupText();
    /**
     * <pre>
     *群文本消息
     * </pre>
     *
     * <code>optional .core.GroupText groupText = 4;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupText getGroupText();
    /**
     * <pre>
     *群文本消息
     * </pre>
     *
     * <code>optional .core.GroupText groupText = 4;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupTextOrBuilder getGroupTextOrBuilder();

    /**
     * <pre>
     *群加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
     */
    boolean hasGroupSecretText();
    /**
     * <pre>
     *群加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupSecretText getGroupSecretText();
    /**
     * <pre>
     *群加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupSecretTextOrBuilder getGroupSecretTextOrBuilder();

    /**
     * <pre>
     *二人图片消息
     * </pre>
     *
     * <code>optional .core.MsgImage image = 6;</code>
     */
    boolean hasImage();
    /**
     * <pre>
     *二人图片消息
     * </pre>
     *
     * <code>optional .core.MsgImage image = 6;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgImage getImage();
    /**
     * <pre>
     *二人图片消息
     * </pre>
     *
     * <code>optional .core.MsgImage image = 6;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgImageOrBuilder getImageOrBuilder();

    /**
     * <pre>
     *二人加密图片消息
     * </pre>
     *
     * <code>optional .core.MsgSecretImage secretImage = 7;</code>
     */
    boolean hasSecretImage();
    /**
     * <pre>
     *二人加密图片消息
     * </pre>
     *
     * <code>optional .core.MsgSecretImage secretImage = 7;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgSecretImage getSecretImage();
    /**
     * <pre>
     *二人加密图片消息
     * </pre>
     *
     * <code>optional .core.MsgSecretImage secretImage = 7;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgSecretImageOrBuilder getSecretImageOrBuilder();

    /**
     * <pre>
     *群图片消息
     * </pre>
     *
     * <code>optional .core.GroupImage groupImage = 8;</code>
     */
    boolean hasGroupImage();
    /**
     * <pre>
     *群图片消息
     * </pre>
     *
     * <code>optional .core.GroupImage groupImage = 8;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupImage getGroupImage();
    /**
     * <pre>
     *群图片消息
     * </pre>
     *
     * <code>optional .core.GroupImage groupImage = 8;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupImageOrBuilder getGroupImageOrBuilder();

    /**
     * <pre>
     *群图片加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
     */
    boolean hasGroupSecretImage();
    /**
     * <pre>
     *群图片加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupSecretImage getGroupSecretImage();
    /**
     * <pre>
     *群图片加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupSecretImageOrBuilder getGroupSecretImageOrBuilder();

    /**
     * <pre>
     *二人语音
     * </pre>
     *
     * <code>optional .core.MsgVoice voice = 10;</code>
     */
    boolean hasVoice();
    /**
     * <pre>
     *二人语音
     * </pre>
     *
     * <code>optional .core.MsgVoice voice = 10;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgVoice getVoice();
    /**
     * <pre>
     *二人语音
     * </pre>
     *
     * <code>optional .core.MsgVoice voice = 10;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgVoiceOrBuilder getVoiceOrBuilder();

    /**
     * <pre>
     *二人加密语音
     * </pre>
     *
     * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
     */
    boolean hasSecretVoice();
    /**
     * <pre>
     *二人加密语音
     * </pre>
     *
     * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgSecretVoice getSecretVoice();
    /**
     * <pre>
     *二人加密语音
     * </pre>
     *
     * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgSecretVoiceOrBuilder getSecretVoiceOrBuilder();

    /**
     * <pre>
     *群语音
     * </pre>
     *
     * <code>optional .core.GroupVoice groupVoice = 12;</code>
     */
    boolean hasGroupVoice();
    /**
     * <pre>
     *群语音
     * </pre>
     *
     * <code>optional .core.GroupVoice groupVoice = 12;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupVoice getGroupVoice();
    /**
     * <pre>
     *群语音
     * </pre>
     *
     * <code>optional .core.GroupVoice groupVoice = 12;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupVoiceOrBuilder getGroupVoiceOrBuilder();

    /**
     * <pre>
     *群加密语音
     * </pre>
     *
     * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
     */
    boolean hasGroupSecretVoice();
    /**
     * <pre>
     *群加密语音
     * </pre>
     *
     * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupSecretVoice getGroupSecretVoice();
    /**
     * <pre>
     *群加密语音
     * </pre>
     *
     * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupSecretVoiceOrBuilder getGroupSecretVoiceOrBuilder();

    /**
     * <pre>
     *普通地图消息
     * </pre>
     *
     * <code>optional .core.MsgMap map = 14;</code>
     */
    boolean hasMap();
    /**
     * <pre>
     *普通地图消息
     * </pre>
     *
     * <code>optional .core.MsgMap map = 14;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgMap getMap();
    /**
     * <pre>
     *普通地图消息
     * </pre>
     *
     * <code>optional .core.MsgMap map = 14;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgMapOrBuilder getMapOrBuilder();

    /**
     * <pre>
     *加密地图消息
     * </pre>
     *
     * <code>optional .core.MsgSecretMap secretMap = 15;</code>
     */
    boolean hasSecretMap();
    /**
     * <pre>
     *加密地图消息
     * </pre>
     *
     * <code>optional .core.MsgSecretMap secretMap = 15;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgSecretMap getSecretMap();
    /**
     * <pre>
     *加密地图消息
     * </pre>
     *
     * <code>optional .core.MsgSecretMap secretMap = 15;</code>
     */
    com.akaxin.proto.core.CoreProto.MsgSecretMapOrBuilder getSecretMapOrBuilder();

    /**
     * <pre>
     *群地图
     * </pre>
     *
     * <code>optional .core.GroupMap groupMap = 16;</code>
     */
    boolean hasGroupMap();
    /**
     * <pre>
     *群地图
     * </pre>
     *
     * <code>optional .core.GroupMap groupMap = 16;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupMap getGroupMap();
    /**
     * <pre>
     *群地图
     * </pre>
     *
     * <code>optional .core.GroupMap groupMap = 16;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupMapOrBuilder getGroupMapOrBuilder();

    /**
     * <pre>
     *群加密地图
     * </pre>
     *
     * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
     */
    boolean hasGroupSecretMap();
    /**
     * <pre>
     *群加密地图
     * </pre>
     *
     * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupSecretMap getGroupSecretMap();
    /**
     * <pre>
     *群加密地图
     * </pre>
     *
     * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupSecretMapOrBuilder getGroupSecretMapOrBuilder();

    /**
     * <pre>
     *二人消息通知
     * </pre>
     *
     * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
     */
    boolean hasU2MsgNotice();
    /**
     * <pre>
     *二人消息通知
     * </pre>
     *
     * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
     */
    com.akaxin.proto.core.CoreProto.U2MsgNotice getU2MsgNotice();
    /**
     * <pre>
     *二人消息通知
     * </pre>
     *
     * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
     */
    com.akaxin.proto.core.CoreProto.U2MsgNoticeOrBuilder getU2MsgNoticeOrBuilder();

    /**
     * <pre>
     *群消息通知
     * </pre>
     *
     * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
     */
    boolean hasGroupMsgNotice();
    /**
     * <pre>
     *群消息通知
     * </pre>
     *
     * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupMsgNotice getGroupMsgNotice();
    /**
     * <pre>
     *群消息通知
     * </pre>
     *
     * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
     */
    com.akaxin.proto.core.CoreProto.GroupMsgNoticeOrBuilder getGroupMsgNoticeOrBuilder();
  }
  /**
   * Protobuf type {@code site.ImCtsMessageRequest}
   */
  public  static final class ImCtsMessageRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:site.ImCtsMessageRequest)
      ImCtsMessageRequestOrBuilder {
    // Use ImCtsMessageRequest.newBuilder() to construct.
    private ImCtsMessageRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImCtsMessageRequest() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ImCtsMessageRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              com.akaxin.proto.core.CoreProto.MsgText.Builder subBuilder = null;
              if (text_ != null) {
                subBuilder = text_.toBuilder();
              }
              text_ = input.readMessage(com.akaxin.proto.core.CoreProto.MsgText.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(text_);
                text_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.akaxin.proto.core.CoreProto.MsgSecretText.Builder subBuilder = null;
              if (secretText_ != null) {
                subBuilder = secretText_.toBuilder();
              }
              secretText_ = input.readMessage(com.akaxin.proto.core.CoreProto.MsgSecretText.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(secretText_);
                secretText_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.akaxin.proto.core.CoreProto.GroupText.Builder subBuilder = null;
              if (groupText_ != null) {
                subBuilder = groupText_.toBuilder();
              }
              groupText_ = input.readMessage(com.akaxin.proto.core.CoreProto.GroupText.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupText_);
                groupText_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.akaxin.proto.core.CoreProto.GroupSecretText.Builder subBuilder = null;
              if (groupSecretText_ != null) {
                subBuilder = groupSecretText_.toBuilder();
              }
              groupSecretText_ = input.readMessage(com.akaxin.proto.core.CoreProto.GroupSecretText.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupSecretText_);
                groupSecretText_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.akaxin.proto.core.CoreProto.MsgImage.Builder subBuilder = null;
              if (image_ != null) {
                subBuilder = image_.toBuilder();
              }
              image_ = input.readMessage(com.akaxin.proto.core.CoreProto.MsgImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(image_);
                image_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.akaxin.proto.core.CoreProto.MsgSecretImage.Builder subBuilder = null;
              if (secretImage_ != null) {
                subBuilder = secretImage_.toBuilder();
              }
              secretImage_ = input.readMessage(com.akaxin.proto.core.CoreProto.MsgSecretImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(secretImage_);
                secretImage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.akaxin.proto.core.CoreProto.GroupImage.Builder subBuilder = null;
              if (groupImage_ != null) {
                subBuilder = groupImage_.toBuilder();
              }
              groupImage_ = input.readMessage(com.akaxin.proto.core.CoreProto.GroupImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupImage_);
                groupImage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              com.akaxin.proto.core.CoreProto.GroupSecretImage.Builder subBuilder = null;
              if (groupSecretImage_ != null) {
                subBuilder = groupSecretImage_.toBuilder();
              }
              groupSecretImage_ = input.readMessage(com.akaxin.proto.core.CoreProto.GroupSecretImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupSecretImage_);
                groupSecretImage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              com.akaxin.proto.core.CoreProto.MsgVoice.Builder subBuilder = null;
              if (voice_ != null) {
                subBuilder = voice_.toBuilder();
              }
              voice_ = input.readMessage(com.akaxin.proto.core.CoreProto.MsgVoice.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(voice_);
                voice_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              com.akaxin.proto.core.CoreProto.MsgSecretVoice.Builder subBuilder = null;
              if (secretVoice_ != null) {
                subBuilder = secretVoice_.toBuilder();
              }
              secretVoice_ = input.readMessage(com.akaxin.proto.core.CoreProto.MsgSecretVoice.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(secretVoice_);
                secretVoice_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              com.akaxin.proto.core.CoreProto.GroupVoice.Builder subBuilder = null;
              if (groupVoice_ != null) {
                subBuilder = groupVoice_.toBuilder();
              }
              groupVoice_ = input.readMessage(com.akaxin.proto.core.CoreProto.GroupVoice.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupVoice_);
                groupVoice_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              com.akaxin.proto.core.CoreProto.GroupSecretVoice.Builder subBuilder = null;
              if (groupSecretVoice_ != null) {
                subBuilder = groupSecretVoice_.toBuilder();
              }
              groupSecretVoice_ = input.readMessage(com.akaxin.proto.core.CoreProto.GroupSecretVoice.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupSecretVoice_);
                groupSecretVoice_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              com.akaxin.proto.core.CoreProto.MsgMap.Builder subBuilder = null;
              if (map_ != null) {
                subBuilder = map_.toBuilder();
              }
              map_ = input.readMessage(com.akaxin.proto.core.CoreProto.MsgMap.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(map_);
                map_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              com.akaxin.proto.core.CoreProto.MsgSecretMap.Builder subBuilder = null;
              if (secretMap_ != null) {
                subBuilder = secretMap_.toBuilder();
              }
              secretMap_ = input.readMessage(com.akaxin.proto.core.CoreProto.MsgSecretMap.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(secretMap_);
                secretMap_ = subBuilder.buildPartial();
              }

              break;
            }
            case 130: {
              com.akaxin.proto.core.CoreProto.GroupMap.Builder subBuilder = null;
              if (groupMap_ != null) {
                subBuilder = groupMap_.toBuilder();
              }
              groupMap_ = input.readMessage(com.akaxin.proto.core.CoreProto.GroupMap.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupMap_);
                groupMap_ = subBuilder.buildPartial();
              }

              break;
            }
            case 138: {
              com.akaxin.proto.core.CoreProto.GroupSecretMap.Builder subBuilder = null;
              if (groupSecretMap_ != null) {
                subBuilder = groupSecretMap_.toBuilder();
              }
              groupSecretMap_ = input.readMessage(com.akaxin.proto.core.CoreProto.GroupSecretMap.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupSecretMap_);
                groupSecretMap_ = subBuilder.buildPartial();
              }

              break;
            }
            case 146: {
              com.akaxin.proto.core.CoreProto.U2MsgNotice.Builder subBuilder = null;
              if (u2MsgNotice_ != null) {
                subBuilder = u2MsgNotice_.toBuilder();
              }
              u2MsgNotice_ = input.readMessage(com.akaxin.proto.core.CoreProto.U2MsgNotice.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(u2MsgNotice_);
                u2MsgNotice_ = subBuilder.buildPartial();
              }

              break;
            }
            case 154: {
              com.akaxin.proto.core.CoreProto.GroupMsgNotice.Builder subBuilder = null;
              if (groupMsgNotice_ != null) {
                subBuilder = groupMsgNotice_.toBuilder();
              }
              groupMsgNotice_ = input.readMessage(com.akaxin.proto.core.CoreProto.GroupMsgNotice.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupMsgNotice_);
                groupMsgNotice_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.akaxin.proto.site.ImCtsMessageProto.internal_static_site_ImCtsMessageRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.akaxin.proto.site.ImCtsMessageProto.internal_static_site_ImCtsMessageRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest.class, com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>optional .core.MsgType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     *消息类型
     * </pre>
     *
     * <code>optional .core.MsgType type = 1;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgType getType() {
      com.akaxin.proto.core.CoreProto.MsgType result = com.akaxin.proto.core.CoreProto.MsgType.valueOf(type_);
      return result == null ? com.akaxin.proto.core.CoreProto.MsgType.UNRECOGNIZED : result;
    }

    public static final int TEXT_FIELD_NUMBER = 2;
    private com.akaxin.proto.core.CoreProto.MsgText text_;
    /**
     * <pre>
     *二人文本消息
     * </pre>
     *
     * <code>optional .core.MsgText text = 2;</code>
     */
    public boolean hasText() {
      return text_ != null;
    }
    /**
     * <pre>
     *二人文本消息
     * </pre>
     *
     * <code>optional .core.MsgText text = 2;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgText getText() {
      return text_ == null ? com.akaxin.proto.core.CoreProto.MsgText.getDefaultInstance() : text_;
    }
    /**
     * <pre>
     *二人文本消息
     * </pre>
     *
     * <code>optional .core.MsgText text = 2;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgTextOrBuilder getTextOrBuilder() {
      return getText();
    }

    public static final int SECRETTEXT_FIELD_NUMBER = 3;
    private com.akaxin.proto.core.CoreProto.MsgSecretText secretText_;
    /**
     * <pre>
     *二人加密文本消息
     * </pre>
     *
     * <code>optional .core.MsgSecretText secretText = 3;</code>
     */
    public boolean hasSecretText() {
      return secretText_ != null;
    }
    /**
     * <pre>
     *二人加密文本消息
     * </pre>
     *
     * <code>optional .core.MsgSecretText secretText = 3;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgSecretText getSecretText() {
      return secretText_ == null ? com.akaxin.proto.core.CoreProto.MsgSecretText.getDefaultInstance() : secretText_;
    }
    /**
     * <pre>
     *二人加密文本消息
     * </pre>
     *
     * <code>optional .core.MsgSecretText secretText = 3;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgSecretTextOrBuilder getSecretTextOrBuilder() {
      return getSecretText();
    }

    public static final int GROUPTEXT_FIELD_NUMBER = 4;
    private com.akaxin.proto.core.CoreProto.GroupText groupText_;
    /**
     * <pre>
     *群文本消息
     * </pre>
     *
     * <code>optional .core.GroupText groupText = 4;</code>
     */
    public boolean hasGroupText() {
      return groupText_ != null;
    }
    /**
     * <pre>
     *群文本消息
     * </pre>
     *
     * <code>optional .core.GroupText groupText = 4;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupText getGroupText() {
      return groupText_ == null ? com.akaxin.proto.core.CoreProto.GroupText.getDefaultInstance() : groupText_;
    }
    /**
     * <pre>
     *群文本消息
     * </pre>
     *
     * <code>optional .core.GroupText groupText = 4;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupTextOrBuilder getGroupTextOrBuilder() {
      return getGroupText();
    }

    public static final int GROUPSECRETTEXT_FIELD_NUMBER = 5;
    private com.akaxin.proto.core.CoreProto.GroupSecretText groupSecretText_;
    /**
     * <pre>
     *群加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
     */
    public boolean hasGroupSecretText() {
      return groupSecretText_ != null;
    }
    /**
     * <pre>
     *群加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupSecretText getGroupSecretText() {
      return groupSecretText_ == null ? com.akaxin.proto.core.CoreProto.GroupSecretText.getDefaultInstance() : groupSecretText_;
    }
    /**
     * <pre>
     *群加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupSecretTextOrBuilder getGroupSecretTextOrBuilder() {
      return getGroupSecretText();
    }

    public static final int IMAGE_FIELD_NUMBER = 6;
    private com.akaxin.proto.core.CoreProto.MsgImage image_;
    /**
     * <pre>
     *二人图片消息
     * </pre>
     *
     * <code>optional .core.MsgImage image = 6;</code>
     */
    public boolean hasImage() {
      return image_ != null;
    }
    /**
     * <pre>
     *二人图片消息
     * </pre>
     *
     * <code>optional .core.MsgImage image = 6;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgImage getImage() {
      return image_ == null ? com.akaxin.proto.core.CoreProto.MsgImage.getDefaultInstance() : image_;
    }
    /**
     * <pre>
     *二人图片消息
     * </pre>
     *
     * <code>optional .core.MsgImage image = 6;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgImageOrBuilder getImageOrBuilder() {
      return getImage();
    }

    public static final int SECRETIMAGE_FIELD_NUMBER = 7;
    private com.akaxin.proto.core.CoreProto.MsgSecretImage secretImage_;
    /**
     * <pre>
     *二人加密图片消息
     * </pre>
     *
     * <code>optional .core.MsgSecretImage secretImage = 7;</code>
     */
    public boolean hasSecretImage() {
      return secretImage_ != null;
    }
    /**
     * <pre>
     *二人加密图片消息
     * </pre>
     *
     * <code>optional .core.MsgSecretImage secretImage = 7;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgSecretImage getSecretImage() {
      return secretImage_ == null ? com.akaxin.proto.core.CoreProto.MsgSecretImage.getDefaultInstance() : secretImage_;
    }
    /**
     * <pre>
     *二人加密图片消息
     * </pre>
     *
     * <code>optional .core.MsgSecretImage secretImage = 7;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgSecretImageOrBuilder getSecretImageOrBuilder() {
      return getSecretImage();
    }

    public static final int GROUPIMAGE_FIELD_NUMBER = 8;
    private com.akaxin.proto.core.CoreProto.GroupImage groupImage_;
    /**
     * <pre>
     *群图片消息
     * </pre>
     *
     * <code>optional .core.GroupImage groupImage = 8;</code>
     */
    public boolean hasGroupImage() {
      return groupImage_ != null;
    }
    /**
     * <pre>
     *群图片消息
     * </pre>
     *
     * <code>optional .core.GroupImage groupImage = 8;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupImage getGroupImage() {
      return groupImage_ == null ? com.akaxin.proto.core.CoreProto.GroupImage.getDefaultInstance() : groupImage_;
    }
    /**
     * <pre>
     *群图片消息
     * </pre>
     *
     * <code>optional .core.GroupImage groupImage = 8;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupImageOrBuilder getGroupImageOrBuilder() {
      return getGroupImage();
    }

    public static final int GROUPSECRETIMAGE_FIELD_NUMBER = 9;
    private com.akaxin.proto.core.CoreProto.GroupSecretImage groupSecretImage_;
    /**
     * <pre>
     *群图片加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
     */
    public boolean hasGroupSecretImage() {
      return groupSecretImage_ != null;
    }
    /**
     * <pre>
     *群图片加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupSecretImage getGroupSecretImage() {
      return groupSecretImage_ == null ? com.akaxin.proto.core.CoreProto.GroupSecretImage.getDefaultInstance() : groupSecretImage_;
    }
    /**
     * <pre>
     *群图片加密消息
     * </pre>
     *
     * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupSecretImageOrBuilder getGroupSecretImageOrBuilder() {
      return getGroupSecretImage();
    }

    public static final int VOICE_FIELD_NUMBER = 10;
    private com.akaxin.proto.core.CoreProto.MsgVoice voice_;
    /**
     * <pre>
     *二人语音
     * </pre>
     *
     * <code>optional .core.MsgVoice voice = 10;</code>
     */
    public boolean hasVoice() {
      return voice_ != null;
    }
    /**
     * <pre>
     *二人语音
     * </pre>
     *
     * <code>optional .core.MsgVoice voice = 10;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgVoice getVoice() {
      return voice_ == null ? com.akaxin.proto.core.CoreProto.MsgVoice.getDefaultInstance() : voice_;
    }
    /**
     * <pre>
     *二人语音
     * </pre>
     *
     * <code>optional .core.MsgVoice voice = 10;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgVoiceOrBuilder getVoiceOrBuilder() {
      return getVoice();
    }

    public static final int SECRETVOICE_FIELD_NUMBER = 11;
    private com.akaxin.proto.core.CoreProto.MsgSecretVoice secretVoice_;
    /**
     * <pre>
     *二人加密语音
     * </pre>
     *
     * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
     */
    public boolean hasSecretVoice() {
      return secretVoice_ != null;
    }
    /**
     * <pre>
     *二人加密语音
     * </pre>
     *
     * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgSecretVoice getSecretVoice() {
      return secretVoice_ == null ? com.akaxin.proto.core.CoreProto.MsgSecretVoice.getDefaultInstance() : secretVoice_;
    }
    /**
     * <pre>
     *二人加密语音
     * </pre>
     *
     * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgSecretVoiceOrBuilder getSecretVoiceOrBuilder() {
      return getSecretVoice();
    }

    public static final int GROUPVOICE_FIELD_NUMBER = 12;
    private com.akaxin.proto.core.CoreProto.GroupVoice groupVoice_;
    /**
     * <pre>
     *群语音
     * </pre>
     *
     * <code>optional .core.GroupVoice groupVoice = 12;</code>
     */
    public boolean hasGroupVoice() {
      return groupVoice_ != null;
    }
    /**
     * <pre>
     *群语音
     * </pre>
     *
     * <code>optional .core.GroupVoice groupVoice = 12;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupVoice getGroupVoice() {
      return groupVoice_ == null ? com.akaxin.proto.core.CoreProto.GroupVoice.getDefaultInstance() : groupVoice_;
    }
    /**
     * <pre>
     *群语音
     * </pre>
     *
     * <code>optional .core.GroupVoice groupVoice = 12;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupVoiceOrBuilder getGroupVoiceOrBuilder() {
      return getGroupVoice();
    }

    public static final int GROUPSECRETVOICE_FIELD_NUMBER = 13;
    private com.akaxin.proto.core.CoreProto.GroupSecretVoice groupSecretVoice_;
    /**
     * <pre>
     *群加密语音
     * </pre>
     *
     * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
     */
    public boolean hasGroupSecretVoice() {
      return groupSecretVoice_ != null;
    }
    /**
     * <pre>
     *群加密语音
     * </pre>
     *
     * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupSecretVoice getGroupSecretVoice() {
      return groupSecretVoice_ == null ? com.akaxin.proto.core.CoreProto.GroupSecretVoice.getDefaultInstance() : groupSecretVoice_;
    }
    /**
     * <pre>
     *群加密语音
     * </pre>
     *
     * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupSecretVoiceOrBuilder getGroupSecretVoiceOrBuilder() {
      return getGroupSecretVoice();
    }

    public static final int MAP_FIELD_NUMBER = 14;
    private com.akaxin.proto.core.CoreProto.MsgMap map_;
    /**
     * <pre>
     *普通地图消息
     * </pre>
     *
     * <code>optional .core.MsgMap map = 14;</code>
     */
    public boolean hasMap() {
      return map_ != null;
    }
    /**
     * <pre>
     *普通地图消息
     * </pre>
     *
     * <code>optional .core.MsgMap map = 14;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgMap getMap() {
      return map_ == null ? com.akaxin.proto.core.CoreProto.MsgMap.getDefaultInstance() : map_;
    }
    /**
     * <pre>
     *普通地图消息
     * </pre>
     *
     * <code>optional .core.MsgMap map = 14;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgMapOrBuilder getMapOrBuilder() {
      return getMap();
    }

    public static final int SECRETMAP_FIELD_NUMBER = 15;
    private com.akaxin.proto.core.CoreProto.MsgSecretMap secretMap_;
    /**
     * <pre>
     *加密地图消息
     * </pre>
     *
     * <code>optional .core.MsgSecretMap secretMap = 15;</code>
     */
    public boolean hasSecretMap() {
      return secretMap_ != null;
    }
    /**
     * <pre>
     *加密地图消息
     * </pre>
     *
     * <code>optional .core.MsgSecretMap secretMap = 15;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgSecretMap getSecretMap() {
      return secretMap_ == null ? com.akaxin.proto.core.CoreProto.MsgSecretMap.getDefaultInstance() : secretMap_;
    }
    /**
     * <pre>
     *加密地图消息
     * </pre>
     *
     * <code>optional .core.MsgSecretMap secretMap = 15;</code>
     */
    public com.akaxin.proto.core.CoreProto.MsgSecretMapOrBuilder getSecretMapOrBuilder() {
      return getSecretMap();
    }

    public static final int GROUPMAP_FIELD_NUMBER = 16;
    private com.akaxin.proto.core.CoreProto.GroupMap groupMap_;
    /**
     * <pre>
     *群地图
     * </pre>
     *
     * <code>optional .core.GroupMap groupMap = 16;</code>
     */
    public boolean hasGroupMap() {
      return groupMap_ != null;
    }
    /**
     * <pre>
     *群地图
     * </pre>
     *
     * <code>optional .core.GroupMap groupMap = 16;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupMap getGroupMap() {
      return groupMap_ == null ? com.akaxin.proto.core.CoreProto.GroupMap.getDefaultInstance() : groupMap_;
    }
    /**
     * <pre>
     *群地图
     * </pre>
     *
     * <code>optional .core.GroupMap groupMap = 16;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupMapOrBuilder getGroupMapOrBuilder() {
      return getGroupMap();
    }

    public static final int GROUPSECRETMAP_FIELD_NUMBER = 17;
    private com.akaxin.proto.core.CoreProto.GroupSecretMap groupSecretMap_;
    /**
     * <pre>
     *群加密地图
     * </pre>
     *
     * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
     */
    public boolean hasGroupSecretMap() {
      return groupSecretMap_ != null;
    }
    /**
     * <pre>
     *群加密地图
     * </pre>
     *
     * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupSecretMap getGroupSecretMap() {
      return groupSecretMap_ == null ? com.akaxin.proto.core.CoreProto.GroupSecretMap.getDefaultInstance() : groupSecretMap_;
    }
    /**
     * <pre>
     *群加密地图
     * </pre>
     *
     * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupSecretMapOrBuilder getGroupSecretMapOrBuilder() {
      return getGroupSecretMap();
    }

    public static final int U2MSGNOTICE_FIELD_NUMBER = 18;
    private com.akaxin.proto.core.CoreProto.U2MsgNotice u2MsgNotice_;
    /**
     * <pre>
     *二人消息通知
     * </pre>
     *
     * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
     */
    public boolean hasU2MsgNotice() {
      return u2MsgNotice_ != null;
    }
    /**
     * <pre>
     *二人消息通知
     * </pre>
     *
     * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
     */
    public com.akaxin.proto.core.CoreProto.U2MsgNotice getU2MsgNotice() {
      return u2MsgNotice_ == null ? com.akaxin.proto.core.CoreProto.U2MsgNotice.getDefaultInstance() : u2MsgNotice_;
    }
    /**
     * <pre>
     *二人消息通知
     * </pre>
     *
     * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
     */
    public com.akaxin.proto.core.CoreProto.U2MsgNoticeOrBuilder getU2MsgNoticeOrBuilder() {
      return getU2MsgNotice();
    }

    public static final int GROUPMSGNOTICE_FIELD_NUMBER = 19;
    private com.akaxin.proto.core.CoreProto.GroupMsgNotice groupMsgNotice_;
    /**
     * <pre>
     *群消息通知
     * </pre>
     *
     * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
     */
    public boolean hasGroupMsgNotice() {
      return groupMsgNotice_ != null;
    }
    /**
     * <pre>
     *群消息通知
     * </pre>
     *
     * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupMsgNotice getGroupMsgNotice() {
      return groupMsgNotice_ == null ? com.akaxin.proto.core.CoreProto.GroupMsgNotice.getDefaultInstance() : groupMsgNotice_;
    }
    /**
     * <pre>
     *群消息通知
     * </pre>
     *
     * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
     */
    public com.akaxin.proto.core.CoreProto.GroupMsgNoticeOrBuilder getGroupMsgNoticeOrBuilder() {
      return getGroupMsgNotice();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != com.akaxin.proto.core.CoreProto.MsgType.NOTICE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (text_ != null) {
        output.writeMessage(2, getText());
      }
      if (secretText_ != null) {
        output.writeMessage(3, getSecretText());
      }
      if (groupText_ != null) {
        output.writeMessage(4, getGroupText());
      }
      if (groupSecretText_ != null) {
        output.writeMessage(5, getGroupSecretText());
      }
      if (image_ != null) {
        output.writeMessage(6, getImage());
      }
      if (secretImage_ != null) {
        output.writeMessage(7, getSecretImage());
      }
      if (groupImage_ != null) {
        output.writeMessage(8, getGroupImage());
      }
      if (groupSecretImage_ != null) {
        output.writeMessage(9, getGroupSecretImage());
      }
      if (voice_ != null) {
        output.writeMessage(10, getVoice());
      }
      if (secretVoice_ != null) {
        output.writeMessage(11, getSecretVoice());
      }
      if (groupVoice_ != null) {
        output.writeMessage(12, getGroupVoice());
      }
      if (groupSecretVoice_ != null) {
        output.writeMessage(13, getGroupSecretVoice());
      }
      if (map_ != null) {
        output.writeMessage(14, getMap());
      }
      if (secretMap_ != null) {
        output.writeMessage(15, getSecretMap());
      }
      if (groupMap_ != null) {
        output.writeMessage(16, getGroupMap());
      }
      if (groupSecretMap_ != null) {
        output.writeMessage(17, getGroupSecretMap());
      }
      if (u2MsgNotice_ != null) {
        output.writeMessage(18, getU2MsgNotice());
      }
      if (groupMsgNotice_ != null) {
        output.writeMessage(19, getGroupMsgNotice());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != com.akaxin.proto.core.CoreProto.MsgType.NOTICE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (text_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getText());
      }
      if (secretText_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSecretText());
      }
      if (groupText_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getGroupText());
      }
      if (groupSecretText_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getGroupSecretText());
      }
      if (image_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getImage());
      }
      if (secretImage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getSecretImage());
      }
      if (groupImage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getGroupImage());
      }
      if (groupSecretImage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getGroupSecretImage());
      }
      if (voice_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getVoice());
      }
      if (secretVoice_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getSecretVoice());
      }
      if (groupVoice_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getGroupVoice());
      }
      if (groupSecretVoice_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getGroupSecretVoice());
      }
      if (map_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getMap());
      }
      if (secretMap_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getSecretMap());
      }
      if (groupMap_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getGroupMap());
      }
      if (groupSecretMap_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getGroupSecretMap());
      }
      if (u2MsgNotice_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getU2MsgNotice());
      }
      if (groupMsgNotice_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getGroupMsgNotice());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest)) {
        return super.equals(obj);
      }
      com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest other = (com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && (hasText() == other.hasText());
      if (hasText()) {
        result = result && getText()
            .equals(other.getText());
      }
      result = result && (hasSecretText() == other.hasSecretText());
      if (hasSecretText()) {
        result = result && getSecretText()
            .equals(other.getSecretText());
      }
      result = result && (hasGroupText() == other.hasGroupText());
      if (hasGroupText()) {
        result = result && getGroupText()
            .equals(other.getGroupText());
      }
      result = result && (hasGroupSecretText() == other.hasGroupSecretText());
      if (hasGroupSecretText()) {
        result = result && getGroupSecretText()
            .equals(other.getGroupSecretText());
      }
      result = result && (hasImage() == other.hasImage());
      if (hasImage()) {
        result = result && getImage()
            .equals(other.getImage());
      }
      result = result && (hasSecretImage() == other.hasSecretImage());
      if (hasSecretImage()) {
        result = result && getSecretImage()
            .equals(other.getSecretImage());
      }
      result = result && (hasGroupImage() == other.hasGroupImage());
      if (hasGroupImage()) {
        result = result && getGroupImage()
            .equals(other.getGroupImage());
      }
      result = result && (hasGroupSecretImage() == other.hasGroupSecretImage());
      if (hasGroupSecretImage()) {
        result = result && getGroupSecretImage()
            .equals(other.getGroupSecretImage());
      }
      result = result && (hasVoice() == other.hasVoice());
      if (hasVoice()) {
        result = result && getVoice()
            .equals(other.getVoice());
      }
      result = result && (hasSecretVoice() == other.hasSecretVoice());
      if (hasSecretVoice()) {
        result = result && getSecretVoice()
            .equals(other.getSecretVoice());
      }
      result = result && (hasGroupVoice() == other.hasGroupVoice());
      if (hasGroupVoice()) {
        result = result && getGroupVoice()
            .equals(other.getGroupVoice());
      }
      result = result && (hasGroupSecretVoice() == other.hasGroupSecretVoice());
      if (hasGroupSecretVoice()) {
        result = result && getGroupSecretVoice()
            .equals(other.getGroupSecretVoice());
      }
      result = result && (hasMap() == other.hasMap());
      if (hasMap()) {
        result = result && getMap()
            .equals(other.getMap());
      }
      result = result && (hasSecretMap() == other.hasSecretMap());
      if (hasSecretMap()) {
        result = result && getSecretMap()
            .equals(other.getSecretMap());
      }
      result = result && (hasGroupMap() == other.hasGroupMap());
      if (hasGroupMap()) {
        result = result && getGroupMap()
            .equals(other.getGroupMap());
      }
      result = result && (hasGroupSecretMap() == other.hasGroupSecretMap());
      if (hasGroupSecretMap()) {
        result = result && getGroupSecretMap()
            .equals(other.getGroupSecretMap());
      }
      result = result && (hasU2MsgNotice() == other.hasU2MsgNotice());
      if (hasU2MsgNotice()) {
        result = result && getU2MsgNotice()
            .equals(other.getU2MsgNotice());
      }
      result = result && (hasGroupMsgNotice() == other.hasGroupMsgNotice());
      if (hasGroupMsgNotice()) {
        result = result && getGroupMsgNotice()
            .equals(other.getGroupMsgNotice());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasText()) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
      }
      if (hasSecretText()) {
        hash = (37 * hash) + SECRETTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getSecretText().hashCode();
      }
      if (hasGroupText()) {
        hash = (37 * hash) + GROUPTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getGroupText().hashCode();
      }
      if (hasGroupSecretText()) {
        hash = (37 * hash) + GROUPSECRETTEXT_FIELD_NUMBER;
        hash = (53 * hash) + getGroupSecretText().hashCode();
      }
      if (hasImage()) {
        hash = (37 * hash) + IMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getImage().hashCode();
      }
      if (hasSecretImage()) {
        hash = (37 * hash) + SECRETIMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getSecretImage().hashCode();
      }
      if (hasGroupImage()) {
        hash = (37 * hash) + GROUPIMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getGroupImage().hashCode();
      }
      if (hasGroupSecretImage()) {
        hash = (37 * hash) + GROUPSECRETIMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getGroupSecretImage().hashCode();
      }
      if (hasVoice()) {
        hash = (37 * hash) + VOICE_FIELD_NUMBER;
        hash = (53 * hash) + getVoice().hashCode();
      }
      if (hasSecretVoice()) {
        hash = (37 * hash) + SECRETVOICE_FIELD_NUMBER;
        hash = (53 * hash) + getSecretVoice().hashCode();
      }
      if (hasGroupVoice()) {
        hash = (37 * hash) + GROUPVOICE_FIELD_NUMBER;
        hash = (53 * hash) + getGroupVoice().hashCode();
      }
      if (hasGroupSecretVoice()) {
        hash = (37 * hash) + GROUPSECRETVOICE_FIELD_NUMBER;
        hash = (53 * hash) + getGroupSecretVoice().hashCode();
      }
      if (hasMap()) {
        hash = (37 * hash) + MAP_FIELD_NUMBER;
        hash = (53 * hash) + getMap().hashCode();
      }
      if (hasSecretMap()) {
        hash = (37 * hash) + SECRETMAP_FIELD_NUMBER;
        hash = (53 * hash) + getSecretMap().hashCode();
      }
      if (hasGroupMap()) {
        hash = (37 * hash) + GROUPMAP_FIELD_NUMBER;
        hash = (53 * hash) + getGroupMap().hashCode();
      }
      if (hasGroupSecretMap()) {
        hash = (37 * hash) + GROUPSECRETMAP_FIELD_NUMBER;
        hash = (53 * hash) + getGroupSecretMap().hashCode();
      }
      if (hasU2MsgNotice()) {
        hash = (37 * hash) + U2MSGNOTICE_FIELD_NUMBER;
        hash = (53 * hash) + getU2MsgNotice().hashCode();
      }
      if (hasGroupMsgNotice()) {
        hash = (37 * hash) + GROUPMSGNOTICE_FIELD_NUMBER;
        hash = (53 * hash) + getGroupMsgNotice().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code site.ImCtsMessageRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:site.ImCtsMessageRequest)
        com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.akaxin.proto.site.ImCtsMessageProto.internal_static_site_ImCtsMessageRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.akaxin.proto.site.ImCtsMessageProto.internal_static_site_ImCtsMessageRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest.class, com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest.Builder.class);
      }

      // Construct using com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (textBuilder_ == null) {
          text_ = null;
        } else {
          text_ = null;
          textBuilder_ = null;
        }
        if (secretTextBuilder_ == null) {
          secretText_ = null;
        } else {
          secretText_ = null;
          secretTextBuilder_ = null;
        }
        if (groupTextBuilder_ == null) {
          groupText_ = null;
        } else {
          groupText_ = null;
          groupTextBuilder_ = null;
        }
        if (groupSecretTextBuilder_ == null) {
          groupSecretText_ = null;
        } else {
          groupSecretText_ = null;
          groupSecretTextBuilder_ = null;
        }
        if (imageBuilder_ == null) {
          image_ = null;
        } else {
          image_ = null;
          imageBuilder_ = null;
        }
        if (secretImageBuilder_ == null) {
          secretImage_ = null;
        } else {
          secretImage_ = null;
          secretImageBuilder_ = null;
        }
        if (groupImageBuilder_ == null) {
          groupImage_ = null;
        } else {
          groupImage_ = null;
          groupImageBuilder_ = null;
        }
        if (groupSecretImageBuilder_ == null) {
          groupSecretImage_ = null;
        } else {
          groupSecretImage_ = null;
          groupSecretImageBuilder_ = null;
        }
        if (voiceBuilder_ == null) {
          voice_ = null;
        } else {
          voice_ = null;
          voiceBuilder_ = null;
        }
        if (secretVoiceBuilder_ == null) {
          secretVoice_ = null;
        } else {
          secretVoice_ = null;
          secretVoiceBuilder_ = null;
        }
        if (groupVoiceBuilder_ == null) {
          groupVoice_ = null;
        } else {
          groupVoice_ = null;
          groupVoiceBuilder_ = null;
        }
        if (groupSecretVoiceBuilder_ == null) {
          groupSecretVoice_ = null;
        } else {
          groupSecretVoice_ = null;
          groupSecretVoiceBuilder_ = null;
        }
        if (mapBuilder_ == null) {
          map_ = null;
        } else {
          map_ = null;
          mapBuilder_ = null;
        }
        if (secretMapBuilder_ == null) {
          secretMap_ = null;
        } else {
          secretMap_ = null;
          secretMapBuilder_ = null;
        }
        if (groupMapBuilder_ == null) {
          groupMap_ = null;
        } else {
          groupMap_ = null;
          groupMapBuilder_ = null;
        }
        if (groupSecretMapBuilder_ == null) {
          groupSecretMap_ = null;
        } else {
          groupSecretMap_ = null;
          groupSecretMapBuilder_ = null;
        }
        if (u2MsgNoticeBuilder_ == null) {
          u2MsgNotice_ = null;
        } else {
          u2MsgNotice_ = null;
          u2MsgNoticeBuilder_ = null;
        }
        if (groupMsgNoticeBuilder_ == null) {
          groupMsgNotice_ = null;
        } else {
          groupMsgNotice_ = null;
          groupMsgNoticeBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.akaxin.proto.site.ImCtsMessageProto.internal_static_site_ImCtsMessageRequest_descriptor;
      }

      public com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest getDefaultInstanceForType() {
        return com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest.getDefaultInstance();
      }

      public com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest build() {
        com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest buildPartial() {
        com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest result = new com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest(this);
        result.type_ = type_;
        if (textBuilder_ == null) {
          result.text_ = text_;
        } else {
          result.text_ = textBuilder_.build();
        }
        if (secretTextBuilder_ == null) {
          result.secretText_ = secretText_;
        } else {
          result.secretText_ = secretTextBuilder_.build();
        }
        if (groupTextBuilder_ == null) {
          result.groupText_ = groupText_;
        } else {
          result.groupText_ = groupTextBuilder_.build();
        }
        if (groupSecretTextBuilder_ == null) {
          result.groupSecretText_ = groupSecretText_;
        } else {
          result.groupSecretText_ = groupSecretTextBuilder_.build();
        }
        if (imageBuilder_ == null) {
          result.image_ = image_;
        } else {
          result.image_ = imageBuilder_.build();
        }
        if (secretImageBuilder_ == null) {
          result.secretImage_ = secretImage_;
        } else {
          result.secretImage_ = secretImageBuilder_.build();
        }
        if (groupImageBuilder_ == null) {
          result.groupImage_ = groupImage_;
        } else {
          result.groupImage_ = groupImageBuilder_.build();
        }
        if (groupSecretImageBuilder_ == null) {
          result.groupSecretImage_ = groupSecretImage_;
        } else {
          result.groupSecretImage_ = groupSecretImageBuilder_.build();
        }
        if (voiceBuilder_ == null) {
          result.voice_ = voice_;
        } else {
          result.voice_ = voiceBuilder_.build();
        }
        if (secretVoiceBuilder_ == null) {
          result.secretVoice_ = secretVoice_;
        } else {
          result.secretVoice_ = secretVoiceBuilder_.build();
        }
        if (groupVoiceBuilder_ == null) {
          result.groupVoice_ = groupVoice_;
        } else {
          result.groupVoice_ = groupVoiceBuilder_.build();
        }
        if (groupSecretVoiceBuilder_ == null) {
          result.groupSecretVoice_ = groupSecretVoice_;
        } else {
          result.groupSecretVoice_ = groupSecretVoiceBuilder_.build();
        }
        if (mapBuilder_ == null) {
          result.map_ = map_;
        } else {
          result.map_ = mapBuilder_.build();
        }
        if (secretMapBuilder_ == null) {
          result.secretMap_ = secretMap_;
        } else {
          result.secretMap_ = secretMapBuilder_.build();
        }
        if (groupMapBuilder_ == null) {
          result.groupMap_ = groupMap_;
        } else {
          result.groupMap_ = groupMapBuilder_.build();
        }
        if (groupSecretMapBuilder_ == null) {
          result.groupSecretMap_ = groupSecretMap_;
        } else {
          result.groupSecretMap_ = groupSecretMapBuilder_.build();
        }
        if (u2MsgNoticeBuilder_ == null) {
          result.u2MsgNotice_ = u2MsgNotice_;
        } else {
          result.u2MsgNotice_ = u2MsgNoticeBuilder_.build();
        }
        if (groupMsgNoticeBuilder_ == null) {
          result.groupMsgNotice_ = groupMsgNotice_;
        } else {
          result.groupMsgNotice_ = groupMsgNoticeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest) {
          return mergeFrom((com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest other) {
        if (other == com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasText()) {
          mergeText(other.getText());
        }
        if (other.hasSecretText()) {
          mergeSecretText(other.getSecretText());
        }
        if (other.hasGroupText()) {
          mergeGroupText(other.getGroupText());
        }
        if (other.hasGroupSecretText()) {
          mergeGroupSecretText(other.getGroupSecretText());
        }
        if (other.hasImage()) {
          mergeImage(other.getImage());
        }
        if (other.hasSecretImage()) {
          mergeSecretImage(other.getSecretImage());
        }
        if (other.hasGroupImage()) {
          mergeGroupImage(other.getGroupImage());
        }
        if (other.hasGroupSecretImage()) {
          mergeGroupSecretImage(other.getGroupSecretImage());
        }
        if (other.hasVoice()) {
          mergeVoice(other.getVoice());
        }
        if (other.hasSecretVoice()) {
          mergeSecretVoice(other.getSecretVoice());
        }
        if (other.hasGroupVoice()) {
          mergeGroupVoice(other.getGroupVoice());
        }
        if (other.hasGroupSecretVoice()) {
          mergeGroupSecretVoice(other.getGroupSecretVoice());
        }
        if (other.hasMap()) {
          mergeMap(other.getMap());
        }
        if (other.hasSecretMap()) {
          mergeSecretMap(other.getSecretMap());
        }
        if (other.hasGroupMap()) {
          mergeGroupMap(other.getGroupMap());
        }
        if (other.hasGroupSecretMap()) {
          mergeGroupSecretMap(other.getGroupSecretMap());
        }
        if (other.hasU2MsgNotice()) {
          mergeU2MsgNotice(other.getU2MsgNotice());
        }
        if (other.hasGroupMsgNotice()) {
          mergeGroupMsgNotice(other.getGroupMsgNotice());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>optional .core.MsgType type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>optional .core.MsgType type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>optional .core.MsgType type = 1;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgType getType() {
        com.akaxin.proto.core.CoreProto.MsgType result = com.akaxin.proto.core.CoreProto.MsgType.valueOf(type_);
        return result == null ? com.akaxin.proto.core.CoreProto.MsgType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>optional .core.MsgType type = 1;</code>
       */
      public Builder setType(com.akaxin.proto.core.CoreProto.MsgType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息类型
       * </pre>
       *
       * <code>optional .core.MsgType type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.akaxin.proto.core.CoreProto.MsgText text_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgText, com.akaxin.proto.core.CoreProto.MsgText.Builder, com.akaxin.proto.core.CoreProto.MsgTextOrBuilder> textBuilder_;
      /**
       * <pre>
       *二人文本消息
       * </pre>
       *
       * <code>optional .core.MsgText text = 2;</code>
       */
      public boolean hasText() {
        return textBuilder_ != null || text_ != null;
      }
      /**
       * <pre>
       *二人文本消息
       * </pre>
       *
       * <code>optional .core.MsgText text = 2;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgText getText() {
        if (textBuilder_ == null) {
          return text_ == null ? com.akaxin.proto.core.CoreProto.MsgText.getDefaultInstance() : text_;
        } else {
          return textBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *二人文本消息
       * </pre>
       *
       * <code>optional .core.MsgText text = 2;</code>
       */
      public Builder setText(com.akaxin.proto.core.CoreProto.MsgText value) {
        if (textBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          text_ = value;
          onChanged();
        } else {
          textBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人文本消息
       * </pre>
       *
       * <code>optional .core.MsgText text = 2;</code>
       */
      public Builder setText(
          com.akaxin.proto.core.CoreProto.MsgText.Builder builderForValue) {
        if (textBuilder_ == null) {
          text_ = builderForValue.build();
          onChanged();
        } else {
          textBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *二人文本消息
       * </pre>
       *
       * <code>optional .core.MsgText text = 2;</code>
       */
      public Builder mergeText(com.akaxin.proto.core.CoreProto.MsgText value) {
        if (textBuilder_ == null) {
          if (text_ != null) {
            text_ =
              com.akaxin.proto.core.CoreProto.MsgText.newBuilder(text_).mergeFrom(value).buildPartial();
          } else {
            text_ = value;
          }
          onChanged();
        } else {
          textBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人文本消息
       * </pre>
       *
       * <code>optional .core.MsgText text = 2;</code>
       */
      public Builder clearText() {
        if (textBuilder_ == null) {
          text_ = null;
          onChanged();
        } else {
          text_ = null;
          textBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *二人文本消息
       * </pre>
       *
       * <code>optional .core.MsgText text = 2;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgText.Builder getTextBuilder() {
        
        onChanged();
        return getTextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *二人文本消息
       * </pre>
       *
       * <code>optional .core.MsgText text = 2;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgTextOrBuilder getTextOrBuilder() {
        if (textBuilder_ != null) {
          return textBuilder_.getMessageOrBuilder();
        } else {
          return text_ == null ?
              com.akaxin.proto.core.CoreProto.MsgText.getDefaultInstance() : text_;
        }
      }
      /**
       * <pre>
       *二人文本消息
       * </pre>
       *
       * <code>optional .core.MsgText text = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgText, com.akaxin.proto.core.CoreProto.MsgText.Builder, com.akaxin.proto.core.CoreProto.MsgTextOrBuilder> 
          getTextFieldBuilder() {
        if (textBuilder_ == null) {
          textBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.MsgText, com.akaxin.proto.core.CoreProto.MsgText.Builder, com.akaxin.proto.core.CoreProto.MsgTextOrBuilder>(
                  getText(),
                  getParentForChildren(),
                  isClean());
          text_ = null;
        }
        return textBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.MsgSecretText secretText_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgSecretText, com.akaxin.proto.core.CoreProto.MsgSecretText.Builder, com.akaxin.proto.core.CoreProto.MsgSecretTextOrBuilder> secretTextBuilder_;
      /**
       * <pre>
       *二人加密文本消息
       * </pre>
       *
       * <code>optional .core.MsgSecretText secretText = 3;</code>
       */
      public boolean hasSecretText() {
        return secretTextBuilder_ != null || secretText_ != null;
      }
      /**
       * <pre>
       *二人加密文本消息
       * </pre>
       *
       * <code>optional .core.MsgSecretText secretText = 3;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretText getSecretText() {
        if (secretTextBuilder_ == null) {
          return secretText_ == null ? com.akaxin.proto.core.CoreProto.MsgSecretText.getDefaultInstance() : secretText_;
        } else {
          return secretTextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *二人加密文本消息
       * </pre>
       *
       * <code>optional .core.MsgSecretText secretText = 3;</code>
       */
      public Builder setSecretText(com.akaxin.proto.core.CoreProto.MsgSecretText value) {
        if (secretTextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          secretText_ = value;
          onChanged();
        } else {
          secretTextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人加密文本消息
       * </pre>
       *
       * <code>optional .core.MsgSecretText secretText = 3;</code>
       */
      public Builder setSecretText(
          com.akaxin.proto.core.CoreProto.MsgSecretText.Builder builderForValue) {
        if (secretTextBuilder_ == null) {
          secretText_ = builderForValue.build();
          onChanged();
        } else {
          secretTextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *二人加密文本消息
       * </pre>
       *
       * <code>optional .core.MsgSecretText secretText = 3;</code>
       */
      public Builder mergeSecretText(com.akaxin.proto.core.CoreProto.MsgSecretText value) {
        if (secretTextBuilder_ == null) {
          if (secretText_ != null) {
            secretText_ =
              com.akaxin.proto.core.CoreProto.MsgSecretText.newBuilder(secretText_).mergeFrom(value).buildPartial();
          } else {
            secretText_ = value;
          }
          onChanged();
        } else {
          secretTextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人加密文本消息
       * </pre>
       *
       * <code>optional .core.MsgSecretText secretText = 3;</code>
       */
      public Builder clearSecretText() {
        if (secretTextBuilder_ == null) {
          secretText_ = null;
          onChanged();
        } else {
          secretText_ = null;
          secretTextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *二人加密文本消息
       * </pre>
       *
       * <code>optional .core.MsgSecretText secretText = 3;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretText.Builder getSecretTextBuilder() {
        
        onChanged();
        return getSecretTextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *二人加密文本消息
       * </pre>
       *
       * <code>optional .core.MsgSecretText secretText = 3;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretTextOrBuilder getSecretTextOrBuilder() {
        if (secretTextBuilder_ != null) {
          return secretTextBuilder_.getMessageOrBuilder();
        } else {
          return secretText_ == null ?
              com.akaxin.proto.core.CoreProto.MsgSecretText.getDefaultInstance() : secretText_;
        }
      }
      /**
       * <pre>
       *二人加密文本消息
       * </pre>
       *
       * <code>optional .core.MsgSecretText secretText = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgSecretText, com.akaxin.proto.core.CoreProto.MsgSecretText.Builder, com.akaxin.proto.core.CoreProto.MsgSecretTextOrBuilder> 
          getSecretTextFieldBuilder() {
        if (secretTextBuilder_ == null) {
          secretTextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.MsgSecretText, com.akaxin.proto.core.CoreProto.MsgSecretText.Builder, com.akaxin.proto.core.CoreProto.MsgSecretTextOrBuilder>(
                  getSecretText(),
                  getParentForChildren(),
                  isClean());
          secretText_ = null;
        }
        return secretTextBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.GroupText groupText_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupText, com.akaxin.proto.core.CoreProto.GroupText.Builder, com.akaxin.proto.core.CoreProto.GroupTextOrBuilder> groupTextBuilder_;
      /**
       * <pre>
       *群文本消息
       * </pre>
       *
       * <code>optional .core.GroupText groupText = 4;</code>
       */
      public boolean hasGroupText() {
        return groupTextBuilder_ != null || groupText_ != null;
      }
      /**
       * <pre>
       *群文本消息
       * </pre>
       *
       * <code>optional .core.GroupText groupText = 4;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupText getGroupText() {
        if (groupTextBuilder_ == null) {
          return groupText_ == null ? com.akaxin.proto.core.CoreProto.GroupText.getDefaultInstance() : groupText_;
        } else {
          return groupTextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *群文本消息
       * </pre>
       *
       * <code>optional .core.GroupText groupText = 4;</code>
       */
      public Builder setGroupText(com.akaxin.proto.core.CoreProto.GroupText value) {
        if (groupTextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupText_ = value;
          onChanged();
        } else {
          groupTextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *群文本消息
       * </pre>
       *
       * <code>optional .core.GroupText groupText = 4;</code>
       */
      public Builder setGroupText(
          com.akaxin.proto.core.CoreProto.GroupText.Builder builderForValue) {
        if (groupTextBuilder_ == null) {
          groupText_ = builderForValue.build();
          onChanged();
        } else {
          groupTextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *群文本消息
       * </pre>
       *
       * <code>optional .core.GroupText groupText = 4;</code>
       */
      public Builder mergeGroupText(com.akaxin.proto.core.CoreProto.GroupText value) {
        if (groupTextBuilder_ == null) {
          if (groupText_ != null) {
            groupText_ =
              com.akaxin.proto.core.CoreProto.GroupText.newBuilder(groupText_).mergeFrom(value).buildPartial();
          } else {
            groupText_ = value;
          }
          onChanged();
        } else {
          groupTextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *群文本消息
       * </pre>
       *
       * <code>optional .core.GroupText groupText = 4;</code>
       */
      public Builder clearGroupText() {
        if (groupTextBuilder_ == null) {
          groupText_ = null;
          onChanged();
        } else {
          groupText_ = null;
          groupTextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *群文本消息
       * </pre>
       *
       * <code>optional .core.GroupText groupText = 4;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupText.Builder getGroupTextBuilder() {
        
        onChanged();
        return getGroupTextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *群文本消息
       * </pre>
       *
       * <code>optional .core.GroupText groupText = 4;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupTextOrBuilder getGroupTextOrBuilder() {
        if (groupTextBuilder_ != null) {
          return groupTextBuilder_.getMessageOrBuilder();
        } else {
          return groupText_ == null ?
              com.akaxin.proto.core.CoreProto.GroupText.getDefaultInstance() : groupText_;
        }
      }
      /**
       * <pre>
       *群文本消息
       * </pre>
       *
       * <code>optional .core.GroupText groupText = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupText, com.akaxin.proto.core.CoreProto.GroupText.Builder, com.akaxin.proto.core.CoreProto.GroupTextOrBuilder> 
          getGroupTextFieldBuilder() {
        if (groupTextBuilder_ == null) {
          groupTextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.GroupText, com.akaxin.proto.core.CoreProto.GroupText.Builder, com.akaxin.proto.core.CoreProto.GroupTextOrBuilder>(
                  getGroupText(),
                  getParentForChildren(),
                  isClean());
          groupText_ = null;
        }
        return groupTextBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.GroupSecretText groupSecretText_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupSecretText, com.akaxin.proto.core.CoreProto.GroupSecretText.Builder, com.akaxin.proto.core.CoreProto.GroupSecretTextOrBuilder> groupSecretTextBuilder_;
      /**
       * <pre>
       *群加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
       */
      public boolean hasGroupSecretText() {
        return groupSecretTextBuilder_ != null || groupSecretText_ != null;
      }
      /**
       * <pre>
       *群加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretText getGroupSecretText() {
        if (groupSecretTextBuilder_ == null) {
          return groupSecretText_ == null ? com.akaxin.proto.core.CoreProto.GroupSecretText.getDefaultInstance() : groupSecretText_;
        } else {
          return groupSecretTextBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *群加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
       */
      public Builder setGroupSecretText(com.akaxin.proto.core.CoreProto.GroupSecretText value) {
        if (groupSecretTextBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupSecretText_ = value;
          onChanged();
        } else {
          groupSecretTextBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *群加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
       */
      public Builder setGroupSecretText(
          com.akaxin.proto.core.CoreProto.GroupSecretText.Builder builderForValue) {
        if (groupSecretTextBuilder_ == null) {
          groupSecretText_ = builderForValue.build();
          onChanged();
        } else {
          groupSecretTextBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *群加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
       */
      public Builder mergeGroupSecretText(com.akaxin.proto.core.CoreProto.GroupSecretText value) {
        if (groupSecretTextBuilder_ == null) {
          if (groupSecretText_ != null) {
            groupSecretText_ =
              com.akaxin.proto.core.CoreProto.GroupSecretText.newBuilder(groupSecretText_).mergeFrom(value).buildPartial();
          } else {
            groupSecretText_ = value;
          }
          onChanged();
        } else {
          groupSecretTextBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *群加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
       */
      public Builder clearGroupSecretText() {
        if (groupSecretTextBuilder_ == null) {
          groupSecretText_ = null;
          onChanged();
        } else {
          groupSecretText_ = null;
          groupSecretTextBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *群加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretText.Builder getGroupSecretTextBuilder() {
        
        onChanged();
        return getGroupSecretTextFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *群加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretTextOrBuilder getGroupSecretTextOrBuilder() {
        if (groupSecretTextBuilder_ != null) {
          return groupSecretTextBuilder_.getMessageOrBuilder();
        } else {
          return groupSecretText_ == null ?
              com.akaxin.proto.core.CoreProto.GroupSecretText.getDefaultInstance() : groupSecretText_;
        }
      }
      /**
       * <pre>
       *群加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretText groupSecretText = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupSecretText, com.akaxin.proto.core.CoreProto.GroupSecretText.Builder, com.akaxin.proto.core.CoreProto.GroupSecretTextOrBuilder> 
          getGroupSecretTextFieldBuilder() {
        if (groupSecretTextBuilder_ == null) {
          groupSecretTextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.GroupSecretText, com.akaxin.proto.core.CoreProto.GroupSecretText.Builder, com.akaxin.proto.core.CoreProto.GroupSecretTextOrBuilder>(
                  getGroupSecretText(),
                  getParentForChildren(),
                  isClean());
          groupSecretText_ = null;
        }
        return groupSecretTextBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.MsgImage image_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgImage, com.akaxin.proto.core.CoreProto.MsgImage.Builder, com.akaxin.proto.core.CoreProto.MsgImageOrBuilder> imageBuilder_;
      /**
       * <pre>
       *二人图片消息
       * </pre>
       *
       * <code>optional .core.MsgImage image = 6;</code>
       */
      public boolean hasImage() {
        return imageBuilder_ != null || image_ != null;
      }
      /**
       * <pre>
       *二人图片消息
       * </pre>
       *
       * <code>optional .core.MsgImage image = 6;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgImage getImage() {
        if (imageBuilder_ == null) {
          return image_ == null ? com.akaxin.proto.core.CoreProto.MsgImage.getDefaultInstance() : image_;
        } else {
          return imageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *二人图片消息
       * </pre>
       *
       * <code>optional .core.MsgImage image = 6;</code>
       */
      public Builder setImage(com.akaxin.proto.core.CoreProto.MsgImage value) {
        if (imageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          image_ = value;
          onChanged();
        } else {
          imageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人图片消息
       * </pre>
       *
       * <code>optional .core.MsgImage image = 6;</code>
       */
      public Builder setImage(
          com.akaxin.proto.core.CoreProto.MsgImage.Builder builderForValue) {
        if (imageBuilder_ == null) {
          image_ = builderForValue.build();
          onChanged();
        } else {
          imageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *二人图片消息
       * </pre>
       *
       * <code>optional .core.MsgImage image = 6;</code>
       */
      public Builder mergeImage(com.akaxin.proto.core.CoreProto.MsgImage value) {
        if (imageBuilder_ == null) {
          if (image_ != null) {
            image_ =
              com.akaxin.proto.core.CoreProto.MsgImage.newBuilder(image_).mergeFrom(value).buildPartial();
          } else {
            image_ = value;
          }
          onChanged();
        } else {
          imageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人图片消息
       * </pre>
       *
       * <code>optional .core.MsgImage image = 6;</code>
       */
      public Builder clearImage() {
        if (imageBuilder_ == null) {
          image_ = null;
          onChanged();
        } else {
          image_ = null;
          imageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *二人图片消息
       * </pre>
       *
       * <code>optional .core.MsgImage image = 6;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgImage.Builder getImageBuilder() {
        
        onChanged();
        return getImageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *二人图片消息
       * </pre>
       *
       * <code>optional .core.MsgImage image = 6;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgImageOrBuilder getImageOrBuilder() {
        if (imageBuilder_ != null) {
          return imageBuilder_.getMessageOrBuilder();
        } else {
          return image_ == null ?
              com.akaxin.proto.core.CoreProto.MsgImage.getDefaultInstance() : image_;
        }
      }
      /**
       * <pre>
       *二人图片消息
       * </pre>
       *
       * <code>optional .core.MsgImage image = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgImage, com.akaxin.proto.core.CoreProto.MsgImage.Builder, com.akaxin.proto.core.CoreProto.MsgImageOrBuilder> 
          getImageFieldBuilder() {
        if (imageBuilder_ == null) {
          imageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.MsgImage, com.akaxin.proto.core.CoreProto.MsgImage.Builder, com.akaxin.proto.core.CoreProto.MsgImageOrBuilder>(
                  getImage(),
                  getParentForChildren(),
                  isClean());
          image_ = null;
        }
        return imageBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.MsgSecretImage secretImage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgSecretImage, com.akaxin.proto.core.CoreProto.MsgSecretImage.Builder, com.akaxin.proto.core.CoreProto.MsgSecretImageOrBuilder> secretImageBuilder_;
      /**
       * <pre>
       *二人加密图片消息
       * </pre>
       *
       * <code>optional .core.MsgSecretImage secretImage = 7;</code>
       */
      public boolean hasSecretImage() {
        return secretImageBuilder_ != null || secretImage_ != null;
      }
      /**
       * <pre>
       *二人加密图片消息
       * </pre>
       *
       * <code>optional .core.MsgSecretImage secretImage = 7;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretImage getSecretImage() {
        if (secretImageBuilder_ == null) {
          return secretImage_ == null ? com.akaxin.proto.core.CoreProto.MsgSecretImage.getDefaultInstance() : secretImage_;
        } else {
          return secretImageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *二人加密图片消息
       * </pre>
       *
       * <code>optional .core.MsgSecretImage secretImage = 7;</code>
       */
      public Builder setSecretImage(com.akaxin.proto.core.CoreProto.MsgSecretImage value) {
        if (secretImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          secretImage_ = value;
          onChanged();
        } else {
          secretImageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人加密图片消息
       * </pre>
       *
       * <code>optional .core.MsgSecretImage secretImage = 7;</code>
       */
      public Builder setSecretImage(
          com.akaxin.proto.core.CoreProto.MsgSecretImage.Builder builderForValue) {
        if (secretImageBuilder_ == null) {
          secretImage_ = builderForValue.build();
          onChanged();
        } else {
          secretImageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *二人加密图片消息
       * </pre>
       *
       * <code>optional .core.MsgSecretImage secretImage = 7;</code>
       */
      public Builder mergeSecretImage(com.akaxin.proto.core.CoreProto.MsgSecretImage value) {
        if (secretImageBuilder_ == null) {
          if (secretImage_ != null) {
            secretImage_ =
              com.akaxin.proto.core.CoreProto.MsgSecretImage.newBuilder(secretImage_).mergeFrom(value).buildPartial();
          } else {
            secretImage_ = value;
          }
          onChanged();
        } else {
          secretImageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人加密图片消息
       * </pre>
       *
       * <code>optional .core.MsgSecretImage secretImage = 7;</code>
       */
      public Builder clearSecretImage() {
        if (secretImageBuilder_ == null) {
          secretImage_ = null;
          onChanged();
        } else {
          secretImage_ = null;
          secretImageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *二人加密图片消息
       * </pre>
       *
       * <code>optional .core.MsgSecretImage secretImage = 7;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretImage.Builder getSecretImageBuilder() {
        
        onChanged();
        return getSecretImageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *二人加密图片消息
       * </pre>
       *
       * <code>optional .core.MsgSecretImage secretImage = 7;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretImageOrBuilder getSecretImageOrBuilder() {
        if (secretImageBuilder_ != null) {
          return secretImageBuilder_.getMessageOrBuilder();
        } else {
          return secretImage_ == null ?
              com.akaxin.proto.core.CoreProto.MsgSecretImage.getDefaultInstance() : secretImage_;
        }
      }
      /**
       * <pre>
       *二人加密图片消息
       * </pre>
       *
       * <code>optional .core.MsgSecretImage secretImage = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgSecretImage, com.akaxin.proto.core.CoreProto.MsgSecretImage.Builder, com.akaxin.proto.core.CoreProto.MsgSecretImageOrBuilder> 
          getSecretImageFieldBuilder() {
        if (secretImageBuilder_ == null) {
          secretImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.MsgSecretImage, com.akaxin.proto.core.CoreProto.MsgSecretImage.Builder, com.akaxin.proto.core.CoreProto.MsgSecretImageOrBuilder>(
                  getSecretImage(),
                  getParentForChildren(),
                  isClean());
          secretImage_ = null;
        }
        return secretImageBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.GroupImage groupImage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupImage, com.akaxin.proto.core.CoreProto.GroupImage.Builder, com.akaxin.proto.core.CoreProto.GroupImageOrBuilder> groupImageBuilder_;
      /**
       * <pre>
       *群图片消息
       * </pre>
       *
       * <code>optional .core.GroupImage groupImage = 8;</code>
       */
      public boolean hasGroupImage() {
        return groupImageBuilder_ != null || groupImage_ != null;
      }
      /**
       * <pre>
       *群图片消息
       * </pre>
       *
       * <code>optional .core.GroupImage groupImage = 8;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupImage getGroupImage() {
        if (groupImageBuilder_ == null) {
          return groupImage_ == null ? com.akaxin.proto.core.CoreProto.GroupImage.getDefaultInstance() : groupImage_;
        } else {
          return groupImageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *群图片消息
       * </pre>
       *
       * <code>optional .core.GroupImage groupImage = 8;</code>
       */
      public Builder setGroupImage(com.akaxin.proto.core.CoreProto.GroupImage value) {
        if (groupImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupImage_ = value;
          onChanged();
        } else {
          groupImageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *群图片消息
       * </pre>
       *
       * <code>optional .core.GroupImage groupImage = 8;</code>
       */
      public Builder setGroupImage(
          com.akaxin.proto.core.CoreProto.GroupImage.Builder builderForValue) {
        if (groupImageBuilder_ == null) {
          groupImage_ = builderForValue.build();
          onChanged();
        } else {
          groupImageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *群图片消息
       * </pre>
       *
       * <code>optional .core.GroupImage groupImage = 8;</code>
       */
      public Builder mergeGroupImage(com.akaxin.proto.core.CoreProto.GroupImage value) {
        if (groupImageBuilder_ == null) {
          if (groupImage_ != null) {
            groupImage_ =
              com.akaxin.proto.core.CoreProto.GroupImage.newBuilder(groupImage_).mergeFrom(value).buildPartial();
          } else {
            groupImage_ = value;
          }
          onChanged();
        } else {
          groupImageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *群图片消息
       * </pre>
       *
       * <code>optional .core.GroupImage groupImage = 8;</code>
       */
      public Builder clearGroupImage() {
        if (groupImageBuilder_ == null) {
          groupImage_ = null;
          onChanged();
        } else {
          groupImage_ = null;
          groupImageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *群图片消息
       * </pre>
       *
       * <code>optional .core.GroupImage groupImage = 8;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupImage.Builder getGroupImageBuilder() {
        
        onChanged();
        return getGroupImageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *群图片消息
       * </pre>
       *
       * <code>optional .core.GroupImage groupImage = 8;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupImageOrBuilder getGroupImageOrBuilder() {
        if (groupImageBuilder_ != null) {
          return groupImageBuilder_.getMessageOrBuilder();
        } else {
          return groupImage_ == null ?
              com.akaxin.proto.core.CoreProto.GroupImage.getDefaultInstance() : groupImage_;
        }
      }
      /**
       * <pre>
       *群图片消息
       * </pre>
       *
       * <code>optional .core.GroupImage groupImage = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupImage, com.akaxin.proto.core.CoreProto.GroupImage.Builder, com.akaxin.proto.core.CoreProto.GroupImageOrBuilder> 
          getGroupImageFieldBuilder() {
        if (groupImageBuilder_ == null) {
          groupImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.GroupImage, com.akaxin.proto.core.CoreProto.GroupImage.Builder, com.akaxin.proto.core.CoreProto.GroupImageOrBuilder>(
                  getGroupImage(),
                  getParentForChildren(),
                  isClean());
          groupImage_ = null;
        }
        return groupImageBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.GroupSecretImage groupSecretImage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupSecretImage, com.akaxin.proto.core.CoreProto.GroupSecretImage.Builder, com.akaxin.proto.core.CoreProto.GroupSecretImageOrBuilder> groupSecretImageBuilder_;
      /**
       * <pre>
       *群图片加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
       */
      public boolean hasGroupSecretImage() {
        return groupSecretImageBuilder_ != null || groupSecretImage_ != null;
      }
      /**
       * <pre>
       *群图片加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretImage getGroupSecretImage() {
        if (groupSecretImageBuilder_ == null) {
          return groupSecretImage_ == null ? com.akaxin.proto.core.CoreProto.GroupSecretImage.getDefaultInstance() : groupSecretImage_;
        } else {
          return groupSecretImageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *群图片加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
       */
      public Builder setGroupSecretImage(com.akaxin.proto.core.CoreProto.GroupSecretImage value) {
        if (groupSecretImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupSecretImage_ = value;
          onChanged();
        } else {
          groupSecretImageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *群图片加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
       */
      public Builder setGroupSecretImage(
          com.akaxin.proto.core.CoreProto.GroupSecretImage.Builder builderForValue) {
        if (groupSecretImageBuilder_ == null) {
          groupSecretImage_ = builderForValue.build();
          onChanged();
        } else {
          groupSecretImageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *群图片加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
       */
      public Builder mergeGroupSecretImage(com.akaxin.proto.core.CoreProto.GroupSecretImage value) {
        if (groupSecretImageBuilder_ == null) {
          if (groupSecretImage_ != null) {
            groupSecretImage_ =
              com.akaxin.proto.core.CoreProto.GroupSecretImage.newBuilder(groupSecretImage_).mergeFrom(value).buildPartial();
          } else {
            groupSecretImage_ = value;
          }
          onChanged();
        } else {
          groupSecretImageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *群图片加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
       */
      public Builder clearGroupSecretImage() {
        if (groupSecretImageBuilder_ == null) {
          groupSecretImage_ = null;
          onChanged();
        } else {
          groupSecretImage_ = null;
          groupSecretImageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *群图片加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretImage.Builder getGroupSecretImageBuilder() {
        
        onChanged();
        return getGroupSecretImageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *群图片加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretImageOrBuilder getGroupSecretImageOrBuilder() {
        if (groupSecretImageBuilder_ != null) {
          return groupSecretImageBuilder_.getMessageOrBuilder();
        } else {
          return groupSecretImage_ == null ?
              com.akaxin.proto.core.CoreProto.GroupSecretImage.getDefaultInstance() : groupSecretImage_;
        }
      }
      /**
       * <pre>
       *群图片加密消息
       * </pre>
       *
       * <code>optional .core.GroupSecretImage groupSecretImage = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupSecretImage, com.akaxin.proto.core.CoreProto.GroupSecretImage.Builder, com.akaxin.proto.core.CoreProto.GroupSecretImageOrBuilder> 
          getGroupSecretImageFieldBuilder() {
        if (groupSecretImageBuilder_ == null) {
          groupSecretImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.GroupSecretImage, com.akaxin.proto.core.CoreProto.GroupSecretImage.Builder, com.akaxin.proto.core.CoreProto.GroupSecretImageOrBuilder>(
                  getGroupSecretImage(),
                  getParentForChildren(),
                  isClean());
          groupSecretImage_ = null;
        }
        return groupSecretImageBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.MsgVoice voice_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgVoice, com.akaxin.proto.core.CoreProto.MsgVoice.Builder, com.akaxin.proto.core.CoreProto.MsgVoiceOrBuilder> voiceBuilder_;
      /**
       * <pre>
       *二人语音
       * </pre>
       *
       * <code>optional .core.MsgVoice voice = 10;</code>
       */
      public boolean hasVoice() {
        return voiceBuilder_ != null || voice_ != null;
      }
      /**
       * <pre>
       *二人语音
       * </pre>
       *
       * <code>optional .core.MsgVoice voice = 10;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgVoice getVoice() {
        if (voiceBuilder_ == null) {
          return voice_ == null ? com.akaxin.proto.core.CoreProto.MsgVoice.getDefaultInstance() : voice_;
        } else {
          return voiceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *二人语音
       * </pre>
       *
       * <code>optional .core.MsgVoice voice = 10;</code>
       */
      public Builder setVoice(com.akaxin.proto.core.CoreProto.MsgVoice value) {
        if (voiceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          voice_ = value;
          onChanged();
        } else {
          voiceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人语音
       * </pre>
       *
       * <code>optional .core.MsgVoice voice = 10;</code>
       */
      public Builder setVoice(
          com.akaxin.proto.core.CoreProto.MsgVoice.Builder builderForValue) {
        if (voiceBuilder_ == null) {
          voice_ = builderForValue.build();
          onChanged();
        } else {
          voiceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *二人语音
       * </pre>
       *
       * <code>optional .core.MsgVoice voice = 10;</code>
       */
      public Builder mergeVoice(com.akaxin.proto.core.CoreProto.MsgVoice value) {
        if (voiceBuilder_ == null) {
          if (voice_ != null) {
            voice_ =
              com.akaxin.proto.core.CoreProto.MsgVoice.newBuilder(voice_).mergeFrom(value).buildPartial();
          } else {
            voice_ = value;
          }
          onChanged();
        } else {
          voiceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人语音
       * </pre>
       *
       * <code>optional .core.MsgVoice voice = 10;</code>
       */
      public Builder clearVoice() {
        if (voiceBuilder_ == null) {
          voice_ = null;
          onChanged();
        } else {
          voice_ = null;
          voiceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *二人语音
       * </pre>
       *
       * <code>optional .core.MsgVoice voice = 10;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgVoice.Builder getVoiceBuilder() {
        
        onChanged();
        return getVoiceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *二人语音
       * </pre>
       *
       * <code>optional .core.MsgVoice voice = 10;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgVoiceOrBuilder getVoiceOrBuilder() {
        if (voiceBuilder_ != null) {
          return voiceBuilder_.getMessageOrBuilder();
        } else {
          return voice_ == null ?
              com.akaxin.proto.core.CoreProto.MsgVoice.getDefaultInstance() : voice_;
        }
      }
      /**
       * <pre>
       *二人语音
       * </pre>
       *
       * <code>optional .core.MsgVoice voice = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgVoice, com.akaxin.proto.core.CoreProto.MsgVoice.Builder, com.akaxin.proto.core.CoreProto.MsgVoiceOrBuilder> 
          getVoiceFieldBuilder() {
        if (voiceBuilder_ == null) {
          voiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.MsgVoice, com.akaxin.proto.core.CoreProto.MsgVoice.Builder, com.akaxin.proto.core.CoreProto.MsgVoiceOrBuilder>(
                  getVoice(),
                  getParentForChildren(),
                  isClean());
          voice_ = null;
        }
        return voiceBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.MsgSecretVoice secretVoice_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgSecretVoice, com.akaxin.proto.core.CoreProto.MsgSecretVoice.Builder, com.akaxin.proto.core.CoreProto.MsgSecretVoiceOrBuilder> secretVoiceBuilder_;
      /**
       * <pre>
       *二人加密语音
       * </pre>
       *
       * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
       */
      public boolean hasSecretVoice() {
        return secretVoiceBuilder_ != null || secretVoice_ != null;
      }
      /**
       * <pre>
       *二人加密语音
       * </pre>
       *
       * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretVoice getSecretVoice() {
        if (secretVoiceBuilder_ == null) {
          return secretVoice_ == null ? com.akaxin.proto.core.CoreProto.MsgSecretVoice.getDefaultInstance() : secretVoice_;
        } else {
          return secretVoiceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *二人加密语音
       * </pre>
       *
       * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
       */
      public Builder setSecretVoice(com.akaxin.proto.core.CoreProto.MsgSecretVoice value) {
        if (secretVoiceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          secretVoice_ = value;
          onChanged();
        } else {
          secretVoiceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人加密语音
       * </pre>
       *
       * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
       */
      public Builder setSecretVoice(
          com.akaxin.proto.core.CoreProto.MsgSecretVoice.Builder builderForValue) {
        if (secretVoiceBuilder_ == null) {
          secretVoice_ = builderForValue.build();
          onChanged();
        } else {
          secretVoiceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *二人加密语音
       * </pre>
       *
       * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
       */
      public Builder mergeSecretVoice(com.akaxin.proto.core.CoreProto.MsgSecretVoice value) {
        if (secretVoiceBuilder_ == null) {
          if (secretVoice_ != null) {
            secretVoice_ =
              com.akaxin.proto.core.CoreProto.MsgSecretVoice.newBuilder(secretVoice_).mergeFrom(value).buildPartial();
          } else {
            secretVoice_ = value;
          }
          onChanged();
        } else {
          secretVoiceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人加密语音
       * </pre>
       *
       * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
       */
      public Builder clearSecretVoice() {
        if (secretVoiceBuilder_ == null) {
          secretVoice_ = null;
          onChanged();
        } else {
          secretVoice_ = null;
          secretVoiceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *二人加密语音
       * </pre>
       *
       * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretVoice.Builder getSecretVoiceBuilder() {
        
        onChanged();
        return getSecretVoiceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *二人加密语音
       * </pre>
       *
       * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretVoiceOrBuilder getSecretVoiceOrBuilder() {
        if (secretVoiceBuilder_ != null) {
          return secretVoiceBuilder_.getMessageOrBuilder();
        } else {
          return secretVoice_ == null ?
              com.akaxin.proto.core.CoreProto.MsgSecretVoice.getDefaultInstance() : secretVoice_;
        }
      }
      /**
       * <pre>
       *二人加密语音
       * </pre>
       *
       * <code>optional .core.MsgSecretVoice secretVoice = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgSecretVoice, com.akaxin.proto.core.CoreProto.MsgSecretVoice.Builder, com.akaxin.proto.core.CoreProto.MsgSecretVoiceOrBuilder> 
          getSecretVoiceFieldBuilder() {
        if (secretVoiceBuilder_ == null) {
          secretVoiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.MsgSecretVoice, com.akaxin.proto.core.CoreProto.MsgSecretVoice.Builder, com.akaxin.proto.core.CoreProto.MsgSecretVoiceOrBuilder>(
                  getSecretVoice(),
                  getParentForChildren(),
                  isClean());
          secretVoice_ = null;
        }
        return secretVoiceBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.GroupVoice groupVoice_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupVoice, com.akaxin.proto.core.CoreProto.GroupVoice.Builder, com.akaxin.proto.core.CoreProto.GroupVoiceOrBuilder> groupVoiceBuilder_;
      /**
       * <pre>
       *群语音
       * </pre>
       *
       * <code>optional .core.GroupVoice groupVoice = 12;</code>
       */
      public boolean hasGroupVoice() {
        return groupVoiceBuilder_ != null || groupVoice_ != null;
      }
      /**
       * <pre>
       *群语音
       * </pre>
       *
       * <code>optional .core.GroupVoice groupVoice = 12;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupVoice getGroupVoice() {
        if (groupVoiceBuilder_ == null) {
          return groupVoice_ == null ? com.akaxin.proto.core.CoreProto.GroupVoice.getDefaultInstance() : groupVoice_;
        } else {
          return groupVoiceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *群语音
       * </pre>
       *
       * <code>optional .core.GroupVoice groupVoice = 12;</code>
       */
      public Builder setGroupVoice(com.akaxin.proto.core.CoreProto.GroupVoice value) {
        if (groupVoiceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupVoice_ = value;
          onChanged();
        } else {
          groupVoiceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *群语音
       * </pre>
       *
       * <code>optional .core.GroupVoice groupVoice = 12;</code>
       */
      public Builder setGroupVoice(
          com.akaxin.proto.core.CoreProto.GroupVoice.Builder builderForValue) {
        if (groupVoiceBuilder_ == null) {
          groupVoice_ = builderForValue.build();
          onChanged();
        } else {
          groupVoiceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *群语音
       * </pre>
       *
       * <code>optional .core.GroupVoice groupVoice = 12;</code>
       */
      public Builder mergeGroupVoice(com.akaxin.proto.core.CoreProto.GroupVoice value) {
        if (groupVoiceBuilder_ == null) {
          if (groupVoice_ != null) {
            groupVoice_ =
              com.akaxin.proto.core.CoreProto.GroupVoice.newBuilder(groupVoice_).mergeFrom(value).buildPartial();
          } else {
            groupVoice_ = value;
          }
          onChanged();
        } else {
          groupVoiceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *群语音
       * </pre>
       *
       * <code>optional .core.GroupVoice groupVoice = 12;</code>
       */
      public Builder clearGroupVoice() {
        if (groupVoiceBuilder_ == null) {
          groupVoice_ = null;
          onChanged();
        } else {
          groupVoice_ = null;
          groupVoiceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *群语音
       * </pre>
       *
       * <code>optional .core.GroupVoice groupVoice = 12;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupVoice.Builder getGroupVoiceBuilder() {
        
        onChanged();
        return getGroupVoiceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *群语音
       * </pre>
       *
       * <code>optional .core.GroupVoice groupVoice = 12;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupVoiceOrBuilder getGroupVoiceOrBuilder() {
        if (groupVoiceBuilder_ != null) {
          return groupVoiceBuilder_.getMessageOrBuilder();
        } else {
          return groupVoice_ == null ?
              com.akaxin.proto.core.CoreProto.GroupVoice.getDefaultInstance() : groupVoice_;
        }
      }
      /**
       * <pre>
       *群语音
       * </pre>
       *
       * <code>optional .core.GroupVoice groupVoice = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupVoice, com.akaxin.proto.core.CoreProto.GroupVoice.Builder, com.akaxin.proto.core.CoreProto.GroupVoiceOrBuilder> 
          getGroupVoiceFieldBuilder() {
        if (groupVoiceBuilder_ == null) {
          groupVoiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.GroupVoice, com.akaxin.proto.core.CoreProto.GroupVoice.Builder, com.akaxin.proto.core.CoreProto.GroupVoiceOrBuilder>(
                  getGroupVoice(),
                  getParentForChildren(),
                  isClean());
          groupVoice_ = null;
        }
        return groupVoiceBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.GroupSecretVoice groupSecretVoice_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupSecretVoice, com.akaxin.proto.core.CoreProto.GroupSecretVoice.Builder, com.akaxin.proto.core.CoreProto.GroupSecretVoiceOrBuilder> groupSecretVoiceBuilder_;
      /**
       * <pre>
       *群加密语音
       * </pre>
       *
       * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
       */
      public boolean hasGroupSecretVoice() {
        return groupSecretVoiceBuilder_ != null || groupSecretVoice_ != null;
      }
      /**
       * <pre>
       *群加密语音
       * </pre>
       *
       * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretVoice getGroupSecretVoice() {
        if (groupSecretVoiceBuilder_ == null) {
          return groupSecretVoice_ == null ? com.akaxin.proto.core.CoreProto.GroupSecretVoice.getDefaultInstance() : groupSecretVoice_;
        } else {
          return groupSecretVoiceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *群加密语音
       * </pre>
       *
       * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
       */
      public Builder setGroupSecretVoice(com.akaxin.proto.core.CoreProto.GroupSecretVoice value) {
        if (groupSecretVoiceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupSecretVoice_ = value;
          onChanged();
        } else {
          groupSecretVoiceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *群加密语音
       * </pre>
       *
       * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
       */
      public Builder setGroupSecretVoice(
          com.akaxin.proto.core.CoreProto.GroupSecretVoice.Builder builderForValue) {
        if (groupSecretVoiceBuilder_ == null) {
          groupSecretVoice_ = builderForValue.build();
          onChanged();
        } else {
          groupSecretVoiceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *群加密语音
       * </pre>
       *
       * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
       */
      public Builder mergeGroupSecretVoice(com.akaxin.proto.core.CoreProto.GroupSecretVoice value) {
        if (groupSecretVoiceBuilder_ == null) {
          if (groupSecretVoice_ != null) {
            groupSecretVoice_ =
              com.akaxin.proto.core.CoreProto.GroupSecretVoice.newBuilder(groupSecretVoice_).mergeFrom(value).buildPartial();
          } else {
            groupSecretVoice_ = value;
          }
          onChanged();
        } else {
          groupSecretVoiceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *群加密语音
       * </pre>
       *
       * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
       */
      public Builder clearGroupSecretVoice() {
        if (groupSecretVoiceBuilder_ == null) {
          groupSecretVoice_ = null;
          onChanged();
        } else {
          groupSecretVoice_ = null;
          groupSecretVoiceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *群加密语音
       * </pre>
       *
       * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretVoice.Builder getGroupSecretVoiceBuilder() {
        
        onChanged();
        return getGroupSecretVoiceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *群加密语音
       * </pre>
       *
       * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretVoiceOrBuilder getGroupSecretVoiceOrBuilder() {
        if (groupSecretVoiceBuilder_ != null) {
          return groupSecretVoiceBuilder_.getMessageOrBuilder();
        } else {
          return groupSecretVoice_ == null ?
              com.akaxin.proto.core.CoreProto.GroupSecretVoice.getDefaultInstance() : groupSecretVoice_;
        }
      }
      /**
       * <pre>
       *群加密语音
       * </pre>
       *
       * <code>optional .core.GroupSecretVoice groupSecretVoice = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupSecretVoice, com.akaxin.proto.core.CoreProto.GroupSecretVoice.Builder, com.akaxin.proto.core.CoreProto.GroupSecretVoiceOrBuilder> 
          getGroupSecretVoiceFieldBuilder() {
        if (groupSecretVoiceBuilder_ == null) {
          groupSecretVoiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.GroupSecretVoice, com.akaxin.proto.core.CoreProto.GroupSecretVoice.Builder, com.akaxin.proto.core.CoreProto.GroupSecretVoiceOrBuilder>(
                  getGroupSecretVoice(),
                  getParentForChildren(),
                  isClean());
          groupSecretVoice_ = null;
        }
        return groupSecretVoiceBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.MsgMap map_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgMap, com.akaxin.proto.core.CoreProto.MsgMap.Builder, com.akaxin.proto.core.CoreProto.MsgMapOrBuilder> mapBuilder_;
      /**
       * <pre>
       *普通地图消息
       * </pre>
       *
       * <code>optional .core.MsgMap map = 14;</code>
       */
      public boolean hasMap() {
        return mapBuilder_ != null || map_ != null;
      }
      /**
       * <pre>
       *普通地图消息
       * </pre>
       *
       * <code>optional .core.MsgMap map = 14;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgMap getMap() {
        if (mapBuilder_ == null) {
          return map_ == null ? com.akaxin.proto.core.CoreProto.MsgMap.getDefaultInstance() : map_;
        } else {
          return mapBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *普通地图消息
       * </pre>
       *
       * <code>optional .core.MsgMap map = 14;</code>
       */
      public Builder setMap(com.akaxin.proto.core.CoreProto.MsgMap value) {
        if (mapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          map_ = value;
          onChanged();
        } else {
          mapBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *普通地图消息
       * </pre>
       *
       * <code>optional .core.MsgMap map = 14;</code>
       */
      public Builder setMap(
          com.akaxin.proto.core.CoreProto.MsgMap.Builder builderForValue) {
        if (mapBuilder_ == null) {
          map_ = builderForValue.build();
          onChanged();
        } else {
          mapBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *普通地图消息
       * </pre>
       *
       * <code>optional .core.MsgMap map = 14;</code>
       */
      public Builder mergeMap(com.akaxin.proto.core.CoreProto.MsgMap value) {
        if (mapBuilder_ == null) {
          if (map_ != null) {
            map_ =
              com.akaxin.proto.core.CoreProto.MsgMap.newBuilder(map_).mergeFrom(value).buildPartial();
          } else {
            map_ = value;
          }
          onChanged();
        } else {
          mapBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *普通地图消息
       * </pre>
       *
       * <code>optional .core.MsgMap map = 14;</code>
       */
      public Builder clearMap() {
        if (mapBuilder_ == null) {
          map_ = null;
          onChanged();
        } else {
          map_ = null;
          mapBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *普通地图消息
       * </pre>
       *
       * <code>optional .core.MsgMap map = 14;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgMap.Builder getMapBuilder() {
        
        onChanged();
        return getMapFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *普通地图消息
       * </pre>
       *
       * <code>optional .core.MsgMap map = 14;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgMapOrBuilder getMapOrBuilder() {
        if (mapBuilder_ != null) {
          return mapBuilder_.getMessageOrBuilder();
        } else {
          return map_ == null ?
              com.akaxin.proto.core.CoreProto.MsgMap.getDefaultInstance() : map_;
        }
      }
      /**
       * <pre>
       *普通地图消息
       * </pre>
       *
       * <code>optional .core.MsgMap map = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgMap, com.akaxin.proto.core.CoreProto.MsgMap.Builder, com.akaxin.proto.core.CoreProto.MsgMapOrBuilder> 
          getMapFieldBuilder() {
        if (mapBuilder_ == null) {
          mapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.MsgMap, com.akaxin.proto.core.CoreProto.MsgMap.Builder, com.akaxin.proto.core.CoreProto.MsgMapOrBuilder>(
                  getMap(),
                  getParentForChildren(),
                  isClean());
          map_ = null;
        }
        return mapBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.MsgSecretMap secretMap_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgSecretMap, com.akaxin.proto.core.CoreProto.MsgSecretMap.Builder, com.akaxin.proto.core.CoreProto.MsgSecretMapOrBuilder> secretMapBuilder_;
      /**
       * <pre>
       *加密地图消息
       * </pre>
       *
       * <code>optional .core.MsgSecretMap secretMap = 15;</code>
       */
      public boolean hasSecretMap() {
        return secretMapBuilder_ != null || secretMap_ != null;
      }
      /**
       * <pre>
       *加密地图消息
       * </pre>
       *
       * <code>optional .core.MsgSecretMap secretMap = 15;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretMap getSecretMap() {
        if (secretMapBuilder_ == null) {
          return secretMap_ == null ? com.akaxin.proto.core.CoreProto.MsgSecretMap.getDefaultInstance() : secretMap_;
        } else {
          return secretMapBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *加密地图消息
       * </pre>
       *
       * <code>optional .core.MsgSecretMap secretMap = 15;</code>
       */
      public Builder setSecretMap(com.akaxin.proto.core.CoreProto.MsgSecretMap value) {
        if (secretMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          secretMap_ = value;
          onChanged();
        } else {
          secretMapBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *加密地图消息
       * </pre>
       *
       * <code>optional .core.MsgSecretMap secretMap = 15;</code>
       */
      public Builder setSecretMap(
          com.akaxin.proto.core.CoreProto.MsgSecretMap.Builder builderForValue) {
        if (secretMapBuilder_ == null) {
          secretMap_ = builderForValue.build();
          onChanged();
        } else {
          secretMapBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *加密地图消息
       * </pre>
       *
       * <code>optional .core.MsgSecretMap secretMap = 15;</code>
       */
      public Builder mergeSecretMap(com.akaxin.proto.core.CoreProto.MsgSecretMap value) {
        if (secretMapBuilder_ == null) {
          if (secretMap_ != null) {
            secretMap_ =
              com.akaxin.proto.core.CoreProto.MsgSecretMap.newBuilder(secretMap_).mergeFrom(value).buildPartial();
          } else {
            secretMap_ = value;
          }
          onChanged();
        } else {
          secretMapBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *加密地图消息
       * </pre>
       *
       * <code>optional .core.MsgSecretMap secretMap = 15;</code>
       */
      public Builder clearSecretMap() {
        if (secretMapBuilder_ == null) {
          secretMap_ = null;
          onChanged();
        } else {
          secretMap_ = null;
          secretMapBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *加密地图消息
       * </pre>
       *
       * <code>optional .core.MsgSecretMap secretMap = 15;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretMap.Builder getSecretMapBuilder() {
        
        onChanged();
        return getSecretMapFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *加密地图消息
       * </pre>
       *
       * <code>optional .core.MsgSecretMap secretMap = 15;</code>
       */
      public com.akaxin.proto.core.CoreProto.MsgSecretMapOrBuilder getSecretMapOrBuilder() {
        if (secretMapBuilder_ != null) {
          return secretMapBuilder_.getMessageOrBuilder();
        } else {
          return secretMap_ == null ?
              com.akaxin.proto.core.CoreProto.MsgSecretMap.getDefaultInstance() : secretMap_;
        }
      }
      /**
       * <pre>
       *加密地图消息
       * </pre>
       *
       * <code>optional .core.MsgSecretMap secretMap = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.MsgSecretMap, com.akaxin.proto.core.CoreProto.MsgSecretMap.Builder, com.akaxin.proto.core.CoreProto.MsgSecretMapOrBuilder> 
          getSecretMapFieldBuilder() {
        if (secretMapBuilder_ == null) {
          secretMapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.MsgSecretMap, com.akaxin.proto.core.CoreProto.MsgSecretMap.Builder, com.akaxin.proto.core.CoreProto.MsgSecretMapOrBuilder>(
                  getSecretMap(),
                  getParentForChildren(),
                  isClean());
          secretMap_ = null;
        }
        return secretMapBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.GroupMap groupMap_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupMap, com.akaxin.proto.core.CoreProto.GroupMap.Builder, com.akaxin.proto.core.CoreProto.GroupMapOrBuilder> groupMapBuilder_;
      /**
       * <pre>
       *群地图
       * </pre>
       *
       * <code>optional .core.GroupMap groupMap = 16;</code>
       */
      public boolean hasGroupMap() {
        return groupMapBuilder_ != null || groupMap_ != null;
      }
      /**
       * <pre>
       *群地图
       * </pre>
       *
       * <code>optional .core.GroupMap groupMap = 16;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupMap getGroupMap() {
        if (groupMapBuilder_ == null) {
          return groupMap_ == null ? com.akaxin.proto.core.CoreProto.GroupMap.getDefaultInstance() : groupMap_;
        } else {
          return groupMapBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *群地图
       * </pre>
       *
       * <code>optional .core.GroupMap groupMap = 16;</code>
       */
      public Builder setGroupMap(com.akaxin.proto.core.CoreProto.GroupMap value) {
        if (groupMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupMap_ = value;
          onChanged();
        } else {
          groupMapBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *群地图
       * </pre>
       *
       * <code>optional .core.GroupMap groupMap = 16;</code>
       */
      public Builder setGroupMap(
          com.akaxin.proto.core.CoreProto.GroupMap.Builder builderForValue) {
        if (groupMapBuilder_ == null) {
          groupMap_ = builderForValue.build();
          onChanged();
        } else {
          groupMapBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *群地图
       * </pre>
       *
       * <code>optional .core.GroupMap groupMap = 16;</code>
       */
      public Builder mergeGroupMap(com.akaxin.proto.core.CoreProto.GroupMap value) {
        if (groupMapBuilder_ == null) {
          if (groupMap_ != null) {
            groupMap_ =
              com.akaxin.proto.core.CoreProto.GroupMap.newBuilder(groupMap_).mergeFrom(value).buildPartial();
          } else {
            groupMap_ = value;
          }
          onChanged();
        } else {
          groupMapBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *群地图
       * </pre>
       *
       * <code>optional .core.GroupMap groupMap = 16;</code>
       */
      public Builder clearGroupMap() {
        if (groupMapBuilder_ == null) {
          groupMap_ = null;
          onChanged();
        } else {
          groupMap_ = null;
          groupMapBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *群地图
       * </pre>
       *
       * <code>optional .core.GroupMap groupMap = 16;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupMap.Builder getGroupMapBuilder() {
        
        onChanged();
        return getGroupMapFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *群地图
       * </pre>
       *
       * <code>optional .core.GroupMap groupMap = 16;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupMapOrBuilder getGroupMapOrBuilder() {
        if (groupMapBuilder_ != null) {
          return groupMapBuilder_.getMessageOrBuilder();
        } else {
          return groupMap_ == null ?
              com.akaxin.proto.core.CoreProto.GroupMap.getDefaultInstance() : groupMap_;
        }
      }
      /**
       * <pre>
       *群地图
       * </pre>
       *
       * <code>optional .core.GroupMap groupMap = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupMap, com.akaxin.proto.core.CoreProto.GroupMap.Builder, com.akaxin.proto.core.CoreProto.GroupMapOrBuilder> 
          getGroupMapFieldBuilder() {
        if (groupMapBuilder_ == null) {
          groupMapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.GroupMap, com.akaxin.proto.core.CoreProto.GroupMap.Builder, com.akaxin.proto.core.CoreProto.GroupMapOrBuilder>(
                  getGroupMap(),
                  getParentForChildren(),
                  isClean());
          groupMap_ = null;
        }
        return groupMapBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.GroupSecretMap groupSecretMap_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupSecretMap, com.akaxin.proto.core.CoreProto.GroupSecretMap.Builder, com.akaxin.proto.core.CoreProto.GroupSecretMapOrBuilder> groupSecretMapBuilder_;
      /**
       * <pre>
       *群加密地图
       * </pre>
       *
       * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
       */
      public boolean hasGroupSecretMap() {
        return groupSecretMapBuilder_ != null || groupSecretMap_ != null;
      }
      /**
       * <pre>
       *群加密地图
       * </pre>
       *
       * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretMap getGroupSecretMap() {
        if (groupSecretMapBuilder_ == null) {
          return groupSecretMap_ == null ? com.akaxin.proto.core.CoreProto.GroupSecretMap.getDefaultInstance() : groupSecretMap_;
        } else {
          return groupSecretMapBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *群加密地图
       * </pre>
       *
       * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
       */
      public Builder setGroupSecretMap(com.akaxin.proto.core.CoreProto.GroupSecretMap value) {
        if (groupSecretMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupSecretMap_ = value;
          onChanged();
        } else {
          groupSecretMapBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *群加密地图
       * </pre>
       *
       * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
       */
      public Builder setGroupSecretMap(
          com.akaxin.proto.core.CoreProto.GroupSecretMap.Builder builderForValue) {
        if (groupSecretMapBuilder_ == null) {
          groupSecretMap_ = builderForValue.build();
          onChanged();
        } else {
          groupSecretMapBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *群加密地图
       * </pre>
       *
       * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
       */
      public Builder mergeGroupSecretMap(com.akaxin.proto.core.CoreProto.GroupSecretMap value) {
        if (groupSecretMapBuilder_ == null) {
          if (groupSecretMap_ != null) {
            groupSecretMap_ =
              com.akaxin.proto.core.CoreProto.GroupSecretMap.newBuilder(groupSecretMap_).mergeFrom(value).buildPartial();
          } else {
            groupSecretMap_ = value;
          }
          onChanged();
        } else {
          groupSecretMapBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *群加密地图
       * </pre>
       *
       * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
       */
      public Builder clearGroupSecretMap() {
        if (groupSecretMapBuilder_ == null) {
          groupSecretMap_ = null;
          onChanged();
        } else {
          groupSecretMap_ = null;
          groupSecretMapBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *群加密地图
       * </pre>
       *
       * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretMap.Builder getGroupSecretMapBuilder() {
        
        onChanged();
        return getGroupSecretMapFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *群加密地图
       * </pre>
       *
       * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupSecretMapOrBuilder getGroupSecretMapOrBuilder() {
        if (groupSecretMapBuilder_ != null) {
          return groupSecretMapBuilder_.getMessageOrBuilder();
        } else {
          return groupSecretMap_ == null ?
              com.akaxin.proto.core.CoreProto.GroupSecretMap.getDefaultInstance() : groupSecretMap_;
        }
      }
      /**
       * <pre>
       *群加密地图
       * </pre>
       *
       * <code>optional .core.GroupSecretMap groupSecretMap = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupSecretMap, com.akaxin.proto.core.CoreProto.GroupSecretMap.Builder, com.akaxin.proto.core.CoreProto.GroupSecretMapOrBuilder> 
          getGroupSecretMapFieldBuilder() {
        if (groupSecretMapBuilder_ == null) {
          groupSecretMapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.GroupSecretMap, com.akaxin.proto.core.CoreProto.GroupSecretMap.Builder, com.akaxin.proto.core.CoreProto.GroupSecretMapOrBuilder>(
                  getGroupSecretMap(),
                  getParentForChildren(),
                  isClean());
          groupSecretMap_ = null;
        }
        return groupSecretMapBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.U2MsgNotice u2MsgNotice_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.U2MsgNotice, com.akaxin.proto.core.CoreProto.U2MsgNotice.Builder, com.akaxin.proto.core.CoreProto.U2MsgNoticeOrBuilder> u2MsgNoticeBuilder_;
      /**
       * <pre>
       *二人消息通知
       * </pre>
       *
       * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
       */
      public boolean hasU2MsgNotice() {
        return u2MsgNoticeBuilder_ != null || u2MsgNotice_ != null;
      }
      /**
       * <pre>
       *二人消息通知
       * </pre>
       *
       * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
       */
      public com.akaxin.proto.core.CoreProto.U2MsgNotice getU2MsgNotice() {
        if (u2MsgNoticeBuilder_ == null) {
          return u2MsgNotice_ == null ? com.akaxin.proto.core.CoreProto.U2MsgNotice.getDefaultInstance() : u2MsgNotice_;
        } else {
          return u2MsgNoticeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *二人消息通知
       * </pre>
       *
       * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
       */
      public Builder setU2MsgNotice(com.akaxin.proto.core.CoreProto.U2MsgNotice value) {
        if (u2MsgNoticeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          u2MsgNotice_ = value;
          onChanged();
        } else {
          u2MsgNoticeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人消息通知
       * </pre>
       *
       * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
       */
      public Builder setU2MsgNotice(
          com.akaxin.proto.core.CoreProto.U2MsgNotice.Builder builderForValue) {
        if (u2MsgNoticeBuilder_ == null) {
          u2MsgNotice_ = builderForValue.build();
          onChanged();
        } else {
          u2MsgNoticeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *二人消息通知
       * </pre>
       *
       * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
       */
      public Builder mergeU2MsgNotice(com.akaxin.proto.core.CoreProto.U2MsgNotice value) {
        if (u2MsgNoticeBuilder_ == null) {
          if (u2MsgNotice_ != null) {
            u2MsgNotice_ =
              com.akaxin.proto.core.CoreProto.U2MsgNotice.newBuilder(u2MsgNotice_).mergeFrom(value).buildPartial();
          } else {
            u2MsgNotice_ = value;
          }
          onChanged();
        } else {
          u2MsgNoticeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *二人消息通知
       * </pre>
       *
       * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
       */
      public Builder clearU2MsgNotice() {
        if (u2MsgNoticeBuilder_ == null) {
          u2MsgNotice_ = null;
          onChanged();
        } else {
          u2MsgNotice_ = null;
          u2MsgNoticeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *二人消息通知
       * </pre>
       *
       * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
       */
      public com.akaxin.proto.core.CoreProto.U2MsgNotice.Builder getU2MsgNoticeBuilder() {
        
        onChanged();
        return getU2MsgNoticeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *二人消息通知
       * </pre>
       *
       * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
       */
      public com.akaxin.proto.core.CoreProto.U2MsgNoticeOrBuilder getU2MsgNoticeOrBuilder() {
        if (u2MsgNoticeBuilder_ != null) {
          return u2MsgNoticeBuilder_.getMessageOrBuilder();
        } else {
          return u2MsgNotice_ == null ?
              com.akaxin.proto.core.CoreProto.U2MsgNotice.getDefaultInstance() : u2MsgNotice_;
        }
      }
      /**
       * <pre>
       *二人消息通知
       * </pre>
       *
       * <code>optional .core.U2MsgNotice u2MsgNotice = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.U2MsgNotice, com.akaxin.proto.core.CoreProto.U2MsgNotice.Builder, com.akaxin.proto.core.CoreProto.U2MsgNoticeOrBuilder> 
          getU2MsgNoticeFieldBuilder() {
        if (u2MsgNoticeBuilder_ == null) {
          u2MsgNoticeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.U2MsgNotice, com.akaxin.proto.core.CoreProto.U2MsgNotice.Builder, com.akaxin.proto.core.CoreProto.U2MsgNoticeOrBuilder>(
                  getU2MsgNotice(),
                  getParentForChildren(),
                  isClean());
          u2MsgNotice_ = null;
        }
        return u2MsgNoticeBuilder_;
      }

      private com.akaxin.proto.core.CoreProto.GroupMsgNotice groupMsgNotice_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupMsgNotice, com.akaxin.proto.core.CoreProto.GroupMsgNotice.Builder, com.akaxin.proto.core.CoreProto.GroupMsgNoticeOrBuilder> groupMsgNoticeBuilder_;
      /**
       * <pre>
       *群消息通知
       * </pre>
       *
       * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
       */
      public boolean hasGroupMsgNotice() {
        return groupMsgNoticeBuilder_ != null || groupMsgNotice_ != null;
      }
      /**
       * <pre>
       *群消息通知
       * </pre>
       *
       * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupMsgNotice getGroupMsgNotice() {
        if (groupMsgNoticeBuilder_ == null) {
          return groupMsgNotice_ == null ? com.akaxin.proto.core.CoreProto.GroupMsgNotice.getDefaultInstance() : groupMsgNotice_;
        } else {
          return groupMsgNoticeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *群消息通知
       * </pre>
       *
       * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
       */
      public Builder setGroupMsgNotice(com.akaxin.proto.core.CoreProto.GroupMsgNotice value) {
        if (groupMsgNoticeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupMsgNotice_ = value;
          onChanged();
        } else {
          groupMsgNoticeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *群消息通知
       * </pre>
       *
       * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
       */
      public Builder setGroupMsgNotice(
          com.akaxin.proto.core.CoreProto.GroupMsgNotice.Builder builderForValue) {
        if (groupMsgNoticeBuilder_ == null) {
          groupMsgNotice_ = builderForValue.build();
          onChanged();
        } else {
          groupMsgNoticeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *群消息通知
       * </pre>
       *
       * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
       */
      public Builder mergeGroupMsgNotice(com.akaxin.proto.core.CoreProto.GroupMsgNotice value) {
        if (groupMsgNoticeBuilder_ == null) {
          if (groupMsgNotice_ != null) {
            groupMsgNotice_ =
              com.akaxin.proto.core.CoreProto.GroupMsgNotice.newBuilder(groupMsgNotice_).mergeFrom(value).buildPartial();
          } else {
            groupMsgNotice_ = value;
          }
          onChanged();
        } else {
          groupMsgNoticeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *群消息通知
       * </pre>
       *
       * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
       */
      public Builder clearGroupMsgNotice() {
        if (groupMsgNoticeBuilder_ == null) {
          groupMsgNotice_ = null;
          onChanged();
        } else {
          groupMsgNotice_ = null;
          groupMsgNoticeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *群消息通知
       * </pre>
       *
       * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupMsgNotice.Builder getGroupMsgNoticeBuilder() {
        
        onChanged();
        return getGroupMsgNoticeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *群消息通知
       * </pre>
       *
       * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
       */
      public com.akaxin.proto.core.CoreProto.GroupMsgNoticeOrBuilder getGroupMsgNoticeOrBuilder() {
        if (groupMsgNoticeBuilder_ != null) {
          return groupMsgNoticeBuilder_.getMessageOrBuilder();
        } else {
          return groupMsgNotice_ == null ?
              com.akaxin.proto.core.CoreProto.GroupMsgNotice.getDefaultInstance() : groupMsgNotice_;
        }
      }
      /**
       * <pre>
       *群消息通知
       * </pre>
       *
       * <code>optional .core.GroupMsgNotice groupMsgNotice = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.GroupMsgNotice, com.akaxin.proto.core.CoreProto.GroupMsgNotice.Builder, com.akaxin.proto.core.CoreProto.GroupMsgNoticeOrBuilder> 
          getGroupMsgNoticeFieldBuilder() {
        if (groupMsgNoticeBuilder_ == null) {
          groupMsgNoticeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.GroupMsgNotice, com.akaxin.proto.core.CoreProto.GroupMsgNotice.Builder, com.akaxin.proto.core.CoreProto.GroupMsgNoticeOrBuilder>(
                  getGroupMsgNotice(),
                  getParentForChildren(),
                  isClean());
          groupMsgNotice_ = null;
        }
        return groupMsgNoticeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:site.ImCtsMessageRequest)
    }

    // @@protoc_insertion_point(class_scope:site.ImCtsMessageRequest)
    private static final com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest();
    }

    public static com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImCtsMessageRequest>
        PARSER = new com.google.protobuf.AbstractParser<ImCtsMessageRequest>() {
      public ImCtsMessageRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ImCtsMessageRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImCtsMessageRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImCtsMessageRequest> getParserForType() {
      return PARSER;
    }

    public com.akaxin.proto.site.ImCtsMessageProto.ImCtsMessageRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_site_ImCtsMessageRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_site_ImCtsMessageRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031site/im_cts_message.proto\022\004site\032\017core/" +
      "core.proto\"\370\005\n\023ImCtsMessageRequest\022\033\n\004ty" +
      "pe\030\001 \001(\0162\r.core.MsgType\022\033\n\004text\030\002 \001(\0132\r." +
      "core.MsgText\022\'\n\nsecretText\030\003 \001(\0132\023.core." +
      "MsgSecretText\022\"\n\tgroupText\030\004 \001(\0132\017.core." +
      "GroupText\022.\n\017groupSecretText\030\005 \001(\0132\025.cor" +
      "e.GroupSecretText\022\035\n\005image\030\006 \001(\0132\016.core." +
      "MsgImage\022)\n\013secretImage\030\007 \001(\0132\024.core.Msg" +
      "SecretImage\022$\n\ngroupImage\030\010 \001(\0132\020.core.G" +
      "roupImage\0220\n\020groupSecretImage\030\t \001(\0132\026.co",
      "re.GroupSecretImage\022\035\n\005voice\030\n \001(\0132\016.cor" +
      "e.MsgVoice\022)\n\013secretVoice\030\013 \001(\0132\024.core.M" +
      "sgSecretVoice\022$\n\ngroupVoice\030\014 \001(\0132\020.core" +
      ".GroupVoice\0220\n\020groupSecretVoice\030\r \001(\0132\026." +
      "core.GroupSecretVoice\022\031\n\003map\030\016 \001(\0132\014.cor" +
      "e.MsgMap\022%\n\tsecretMap\030\017 \001(\0132\022.core.MsgSe" +
      "cretMap\022 \n\010groupMap\030\020 \001(\0132\016.core.GroupMa" +
      "p\022,\n\016groupSecretMap\030\021 \001(\0132\024.core.GroupSe" +
      "cretMap\022&\n\013u2MsgNotice\030\022 \001(\0132\021.core.U2Ms" +
      "gNotice\022,\n\016groupMsgNotice\030\023 \001(\0132\024.core.G",
      "roupMsgNotice2O\n\023ImCtsMessageService\0228\n\007" +
      "message\022\031.site.ImCtsMessageRequest\032\022.cor" +
      "e.NoneResponseB*\n\025com.akaxin.proto.siteB" +
      "\021ImCtsMessageProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.akaxin.proto.core.CoreProto.getDescriptor(),
        }, assigner);
    internal_static_site_ImCtsMessageRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_site_ImCtsMessageRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_site_ImCtsMessageRequest_descriptor,
        new java.lang.String[] { "Type", "Text", "SecretText", "GroupText", "GroupSecretText", "Image", "SecretImage", "GroupImage", "GroupSecretImage", "Voice", "SecretVoice", "GroupVoice", "GroupSecretVoice", "Map", "SecretMap", "GroupMap", "GroupSecretMap", "U2MsgNotice", "GroupMsgNotice", });
    com.akaxin.proto.core.CoreProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
